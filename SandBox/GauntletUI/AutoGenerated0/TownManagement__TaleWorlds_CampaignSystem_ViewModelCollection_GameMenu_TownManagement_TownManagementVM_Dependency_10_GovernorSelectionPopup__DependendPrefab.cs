using System.ComponentModel;
using TaleWorlds.CampaignSystem.ViewModelCollection.GameMenu.TownManagement;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Menu.TownManagement;

namespace SandBox.GauntletUI.AutoGenerated0;

public class TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_10_GovernorSelectionPopup__DependendPrefab : AutoClosePopupWidget
{
	private AutoClosePopupWidget _widget;

	private NavigationForcedScopeCollectionTargeter _widget_0;

	private NavigationScopeTargeter _widget_1;

	private AutoClosePopupClosingWidget _widget_2;

	private Widget _widget_3;

	private ScrollablePanel _widget_3_0;

	private Widget _widget_3_0_0;

	private NavigatableGridWidget _widget_3_0_0_0;

	private DimensionSyncWidget _widget_3_1;

	private ScrollbarWidget _widget_3_1_0;

	private ImageWidget _widget_3_1_0_0;

	private ImageWidget _widget_3_1_0_1;

	private TownManagementVM _datasource_Root;

	private SettlementGovernorSelectionVM _datasource_Root_GovernorSelection;

	private MBBindingList<SettlementGovernorSelectionItemVM> _datasource_Root_GovernorSelection_AvailableGovernors;

	public TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_10_GovernorSelectionPopup__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new NavigationForcedScopeCollectionTargeter(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new NavigationScopeTargeter(base.Context);
		_widget.AddChild(_widget_1);
		_widget_2 = new AutoClosePopupClosingWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_3 = new Widget(base.Context);
		_widget.AddChild(_widget_3);
		_widget_3_0 = new ScrollablePanel(base.Context);
		_widget_3.AddChild(_widget_3_0);
		_widget_3_0_0 = new Widget(base.Context);
		_widget_3_0.AddChild(_widget_3_0_0);
		_widget_3_0_0_0 = new NavigatableGridWidget(base.Context);
		_widget_3_0_0.AddChild(_widget_3_0_0_0);
		_widget_3_1 = new DimensionSyncWidget(base.Context);
		_widget_3.AddChild(_widget_3_1);
		_widget_3_1_0 = new ScrollbarWidget(base.Context);
		_widget_3_1.AddChild(_widget_3_1_0);
		_widget_3_1_0_0 = new ImageWidget(base.Context);
		_widget_3_1_0.AddChild(_widget_3_1_0_0);
		_widget_3_1_0_1 = new ImageWidget(base.Context);
		_widget_3_1_0.AddChild(_widget_3_1_0_1);
	}

	public void SetIds()
	{
		_widget_3.Id = "Background";
		_widget_3_0.Id = "Scroll";
		_widget_3_0_0.Id = "ClipRect";
		_widget_3_0_0_0.Id = "InnerList";
		_widget_3_1.Id = "ScrollbarParent";
		_widget_3_1_0.Id = "VerticalScrollbar";
		_widget_3_1_0_1.Id = "VerticalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.CollectionParent = _widget;
		_widget_1.ScopeID = "TownManagementGovernorSelectionScope";
		_widget_1.ScopeParent = _widget_3;
		_widget_1.ScopeMovements = GamepadNavigationTypes.Horizontal;
		_widget_1.AlternateScopeMovements = GamepadNavigationTypes.Vertical;
		_widget_1.AlternateMovementStepSize = 7;
		_widget_2.Target = _widget_3_0_0_0;
		_widget_2.IncludeChildren = true;
		_widget_2.IncludeTarget = false;
		_widget_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3.MaxWidth = 1150f;
		_widget_3.MaxHeight = 275f;
		_widget_3.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_3.VerticalAlignment = VerticalAlignment.Top;
		_widget_3.MarginLeft = 340f;
		_widget_3.MarginTop = 405f;
		_widget_3.Sprite = base.Context.SpriteData.GetSprite("governor_popup_9");
		_widget_3.ExtendLeft = 11f;
		_widget_3.ExtendTop = 5f;
		_widget_3.ExtendRight = 13f;
		_widget_3.ExtendBottom = 14f;
		_widget_3_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0.SuggestedWidth = 870f;
		_widget_3_0.MarginTop = 10f;
		_widget_3_0.MarginRight = 10f;
		_widget_3_0.MarginBottom = 10f;
		_widget_3_0.AutoHideScrollBars = true;
		_widget_3_0.ClipRect = _widget_3_0_0;
		_widget_3_0.InnerPanel = _widget_3_0_0_0;
		_widget_3_0.VerticalScrollbar = _widget_3_1_0;
		_widget_3_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0_0.MaxWidth = 1000f;
		_widget_3_0_0.MaxHeight = 250f;
		_widget_3_0_0.ClipContents = true;
		_widget_3_0_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0_0_0.MarginLeft = 12f;
		_widget_3_0_0_0.MarginRight = 12f;
		_widget_3_0_0_0.MarginTop = 12f;
		_widget_3_0_0_0.MarginBottom = 12f;
		_widget_3_0_0_0.DefaultCellWidth = 120f;
		_widget_3_0_0_0.DefaultCellHeight = 120f;
		_widget_3_0_0_0.ColumnCount = 7;
		_widget_3_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_3_1.DimensionToSync = DimensionSyncWidget.Dimensions.Vertical;
		_widget_3_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_3_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_3_1_0.SuggestedWidth = 8f;
		_widget_3_1_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_3_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_3_1_0.MarginTop = 15f;
		_widget_3_1_0.MarginBottom = 15f;
		_widget_3_1_0.MarginRight = 10f;
		_widget_3_1_0.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_3_1_0.Handle = _widget_3_1_0_1;
		_widget_3_1_0.MaxValue = 100f;
		_widget_3_1_0.MinValue = 0f;
		_widget_3_1_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_3_1_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_3_1_0_0.SuggestedWidth = 4f;
		_widget_3_1_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_3_1_0_0.Brush = base.Context.GetBrush("TownManagement.Scrollbar.VerticalLine");
		_widget_3_1_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_3_1_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_3_1_0_1.SuggestedHeight = 10f;
		_widget_3_1_0_1.SuggestedWidth = 8f;
		_widget_3_1_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_3_1_0_1.Brush = base.Context.GetBrush("TownManagement.Scrollbar.Handle");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		if (_datasource_Root_GovernorSelection != null)
		{
			_datasource_Root_GovernorSelection.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection;
			if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
			{
				_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged -= OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
				for (int num = _widget_3_0_0_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_3_0_0_0.GetChild(num);
					((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child).OnBeforeRemovedChild(child);
					((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)_widget_3_0_0_0.GetChild(num)).DestroyDataSource();
				}
				_datasource_Root_GovernorSelection_AvailableGovernors = null;
			}
			_datasource_Root_GovernorSelection = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(TownManagementVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "GovernorSelection")
		{
			RefreshDataSource_datasource_Root_GovernorSelection(_datasource_Root.GovernorSelection);
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_GovernorSelection(string propertyName)
	{
		if (propertyName == "AvailableGovernors")
		{
			RefreshDataSource_datasource_Root_GovernorSelection_AvailableGovernors(_datasource_Root_GovernorSelection.AvailableGovernors);
		}
	}

	public void OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_3_0_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_3_0_0_0.GetChild(num);
				((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_3_0_0_0.GetChild(num);
				((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child4).SetDataSource(null);
				_widget_3_0_0_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_GovernorSelection_AvailableGovernors.Count; i++)
			{
				SettlementGovernorSelectionItemVM bindingObject = _datasource_Root_GovernorSelection_AvailableGovernors[i];
				_widget_3_0_0_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate = new TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate);
			SettlementGovernorSelectionItemVM dataSource = (SettlementGovernorSelectionItemVM)(generatedWidgetData.Data = _datasource_Root_GovernorSelection_AvailableGovernors[e.NewIndex]);
			townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_3_0_0_0.AddChildAtIndex(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate, e.NewIndex);
			townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.CreateWidgets();
			townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetIds();
			townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetAttributes();
			townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_3_0_0_0.GetChild(e.NewIndex);
			((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_3_0_0_0.GetChild(e.NewIndex);
			((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child).SetDataSource(null);
			_widget_3_0_0_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(TownManagementVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			if (_datasource_Root_GovernorSelection != null)
			{
				_datasource_Root_GovernorSelection.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection;
				_datasource_Root_GovernorSelection.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection;
				if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
				{
					_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged -= OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
					for (int num = _widget_3_0_0_0.ChildCount - 1; num >= 0; num--)
					{
						Widget child = _widget_3_0_0_0.GetChild(num);
						((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child).OnBeforeRemovedChild(child);
						Widget child2 = _widget_3_0_0_0.GetChild(num);
						((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child2).SetDataSource(null);
						_widget_3_0_0_0.RemoveChild(child2);
					}
					_datasource_Root_GovernorSelection_AvailableGovernors = null;
				}
				_datasource_Root_GovernorSelection = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_datasource_Root_GovernorSelection = _datasource_Root.GovernorSelection;
		if (_datasource_Root_GovernorSelection == null)
		{
			return;
		}
		_datasource_Root_GovernorSelection.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection_AvailableGovernors = _datasource_Root_GovernorSelection.AvailableGovernors;
		if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
		{
			_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged += OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
			for (int i = 0; i < _datasource_Root_GovernorSelection_AvailableGovernors.Count; i++)
			{
				TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate = new TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate);
				SettlementGovernorSelectionItemVM dataSource = (SettlementGovernorSelectionItemVM)(generatedWidgetData.Data = _datasource_Root_GovernorSelection_AvailableGovernors[i]);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_3_0_0_0.AddChildAtIndex(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate, i);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.CreateWidgets();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetIds();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetAttributes();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_GovernorSelection(SettlementGovernorSelectionVM newDataSource)
	{
		if (_datasource_Root_GovernorSelection != null)
		{
			_datasource_Root_GovernorSelection.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection;
			_datasource_Root_GovernorSelection.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection;
			if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
			{
				_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged -= OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
				for (int num = _widget_3_0_0_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_3_0_0_0.GetChild(num);
					((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_3_0_0_0.GetChild(num);
					((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child2).SetDataSource(null);
					_widget_3_0_0_0.RemoveChild(child2);
				}
				_datasource_Root_GovernorSelection_AvailableGovernors = null;
			}
			_datasource_Root_GovernorSelection = null;
		}
		_datasource_Root_GovernorSelection = newDataSource;
		_datasource_Root_GovernorSelection = _datasource_Root.GovernorSelection;
		if (_datasource_Root_GovernorSelection == null)
		{
			return;
		}
		_datasource_Root_GovernorSelection.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GovernorSelection;
		_datasource_Root_GovernorSelection_AvailableGovernors = _datasource_Root_GovernorSelection.AvailableGovernors;
		if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
		{
			_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged += OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
			for (int i = 0; i < _datasource_Root_GovernorSelection_AvailableGovernors.Count; i++)
			{
				TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate = new TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate);
				SettlementGovernorSelectionItemVM dataSource = (SettlementGovernorSelectionItemVM)(generatedWidgetData.Data = _datasource_Root_GovernorSelection_AvailableGovernors[i]);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_3_0_0_0.AddChildAtIndex(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate, i);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.CreateWidgets();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetIds();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetAttributes();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_GovernorSelection_AvailableGovernors(MBBindingList<SettlementGovernorSelectionItemVM> newDataSource)
	{
		if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
		{
			_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged -= OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
			for (int num = _widget_3_0_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_3_0_0_0.GetChild(num);
				((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_3_0_0_0.GetChild(num);
				((TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate)child2).SetDataSource(null);
				_widget_3_0_0_0.RemoveChild(child2);
			}
			_datasource_Root_GovernorSelection_AvailableGovernors = null;
		}
		_datasource_Root_GovernorSelection_AvailableGovernors = newDataSource;
		_datasource_Root_GovernorSelection_AvailableGovernors = _datasource_Root_GovernorSelection.AvailableGovernors;
		if (_datasource_Root_GovernorSelection_AvailableGovernors != null)
		{
			_datasource_Root_GovernorSelection_AvailableGovernors.ListChanged += OnList_datasource_Root_GovernorSelection_AvailableGovernorsChanged;
			for (int i = 0; i < _datasource_Root_GovernorSelection_AvailableGovernors.Count; i++)
			{
				TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate = new TownManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate);
				SettlementGovernorSelectionItemVM dataSource = (SettlementGovernorSelectionItemVM)(generatedWidgetData.Data = _datasource_Root_GovernorSelection_AvailableGovernors[i]);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_3_0_0_0.AddChildAtIndex(townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate, i);
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.CreateWidgets();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetIds();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetAttributes();
				townManagement__TaleWorlds_CampaignSystem_ViewModelCollection_GameMenu_TownManagement_TownManagementVM_Dependency_13_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
