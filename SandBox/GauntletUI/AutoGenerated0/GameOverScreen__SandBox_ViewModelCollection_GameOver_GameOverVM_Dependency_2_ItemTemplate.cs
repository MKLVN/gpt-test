using System.ComponentModel;
using System.Numerics;
using SandBox.ViewModelCollection.GameOver;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;

namespace SandBox.GauntletUI.AutoGenerated0;

public class GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_2_ItemTemplate : ListPanel
{
	private ListPanel _widget;

	private TextWidget _widget_0;

	private ListPanel _widget_1;

	private ScrollablePanel _widget_1_0;

	private Widget _widget_1_0_0;

	private Widget _widget_1_0_0_0;

	private ListPanel _widget_1_0_0_0_0;

	private Widget _widget_1_1;

	private ScrollbarWidget _widget_1_1_0;

	private Widget _widget_1_1_0_0;

	private Widget _widget_1_1_0_1;

	private GameOverStatCategoryVM _datasource_Root;

	private MBBindingList<GameOverStatItemVM> _datasource_Root_Items;

	public GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_2_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	private VisualDefinition CreateVisualDefinitionBottomMenu()
	{
		VisualDefinition visualDefinition = new VisualDefinition("BottomMenu", 0.45f, 0f, easeIn: true);
		visualDefinition.AddVisualState(new VisualState("Default")
		{
			PositionYOffset = 6f
		});
		return visualDefinition;
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new TextWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new ListPanel(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new ScrollablePanel(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_0_0 = new Widget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_0);
		_widget_1_0_0_0 = new Widget(base.Context);
		_widget_1_0_0.AddChild(_widget_1_0_0_0);
		_widget_1_0_0_0_0 = new ListPanel(base.Context);
		_widget_1_0_0_0.AddChild(_widget_1_0_0_0_0);
		_widget_1_1 = new Widget(base.Context);
		_widget_1.AddChild(_widget_1_1);
		_widget_1_1_0 = new ScrollbarWidget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_0);
		_widget_1_1_0_0 = new Widget(base.Context);
		_widget_1_1_0.AddChild(_widget_1_1_0_0);
		_widget_1_1_0_1 = new Widget(base.Context);
		_widget_1_1_0.AddChild(_widget_1_1_0_1);
	}

	public void SetIds()
	{
		_widget_1_0.Id = "ScrollablePanel";
		_widget_1_0_0.Id = "ClipRect";
		_widget_1_0_0_0.Id = "InnerPanel";
		_widget_1_1.Id = "ScrollbarContainer";
		_widget_1_1_0.Id = "Scrollbar";
		_widget_1_1_0_0.Id = "ScrollbarBed";
		_widget_1_1_0_1.Id = "ScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.Brush = base.Context.GetBrush("GameOver.Stat.Category.Title.Text");
		_widget_0.MarginBottom = 15f;
		_widget_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.InnerPanel = _widget_1_0_0_0;
		_widget_1_0.ClipRect = _widget_1_0_0;
		_widget_1_0.VerticalScrollbar = _widget_1_1_0;
		_widget_1_0.MarginTop = 10f;
		_widget_1_0.MarginBottom = 10f;
		_widget_1_0.AutoHideScrollBars = true;
		_widget_1_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0.ClipContents = true;
		_widget_1_0_0.MarginTop = 5f;
		_widget_1_0_0.MarginBottom = 5f;
		_widget_1_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_0_0.MarginRight = 15f;
		_widget_1_0_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_0_0_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_1_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0.MinValue = 0f;
		_widget_1_1_0.MaxValue = 100f;
		_widget_1_1_0.SuggestedWidth = 20f;
		_widget_1_1_0.MarginLeft = 0f;
		_widget_1_1_0.MarginBottom = 10f;
		_widget_1_1_0.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_1_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_1_1_0.MarginTop = 20f;
		_widget_1_1_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_1_1_0.Handle = _widget_1_1_0_1;
		_widget_1_1_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_0_0.SuggestedWidth = 2f;
		_widget_1_1_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_0_0.Sprite = base.Context.SpriteData.GetSprite("slider_thin_bed_vertical_9");
		_widget_1_1_0_0.Color = new Color(0.9960785f, 0.7568628f, 0.3411765f);
		_widget_1_1_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0_1.MinHeight = 15f;
		_widget_1_1_0_1.SuggestedWidth = 20f;
		_widget_1_1_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_0_1.Sprite = base.Context.SpriteData.GetSprite("slider_thin_vertical_9");
		_widget_1_1_0_1.Color = new Color(0.9960785f, 0.7568628f, 0.3411765f);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
		_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
		if (_datasource_Root_Items != null)
		{
			_datasource_Root_Items.ListChanged -= OnList_datasource_Root_ItemsChanged;
			for (int num = _widget_1_0_0_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_0_0_0_0.GetChild(num);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)_widget_1_0_0_0_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_Items = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(GameOverStatCategoryVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsSelected = _widget.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.Name = _widget_0.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "Items":
			RefreshDataSource_datasource_Root_Items(_datasource_Root.Items);
			break;
		case "IsSelected":
			_widget.IsVisible = _datasource_Root.IsSelected;
			break;
		case "Name":
			_widget_0.Text = _datasource_Root.Name;
			break;
		}
	}

	public void OnList_datasource_Root_ItemsChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1_0_0_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1_0_0_0_0.GetChild(num);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1_0_0_0_0.GetChild(num);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child4).SetDataSource(null);
				_widget_1_0_0_0_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_Items.Count; i++)
			{
				GameOverStatItemVM bindingObject = _datasource_Root_Items[i];
				_widget_1_0_0_0_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate = new GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate);
			GameOverStatItemVM dataSource = (GameOverStatItemVM)(generatedWidgetData.Data = _datasource_Root_Items[e.NewIndex]);
			gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1_0_0_0_0.AddChildAtIndex(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate, e.NewIndex);
			gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.CreateWidgets();
			gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetIds();
			gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetAttributes();
			gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1_0_0_0_0.GetChild(e.NewIndex);
			((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1_0_0_0_0.GetChild(e.NewIndex);
			((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child).SetDataSource(null);
			_widget_1_0_0_0_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(GameOverStatCategoryVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			if (_datasource_Root_Items != null)
			{
				_datasource_Root_Items.ListChanged -= OnList_datasource_Root_ItemsChanged;
				for (int num = _widget_1_0_0_0_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1_0_0_0_0.GetChild(num);
					((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1_0_0_0_0.GetChild(num);
					((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
					_widget_1_0_0_0_0.RemoveChild(child2);
				}
				_datasource_Root_Items = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.IsVisible = _datasource_Root.IsSelected;
		_widget.PropertyChanged += PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
		_widget_0.Text = _datasource_Root.Name;
		_widget_0.PropertyChanged += PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0;
		_datasource_Root_Items = _datasource_Root.Items;
		if (_datasource_Root_Items != null)
		{
			_datasource_Root_Items.ListChanged += OnList_datasource_Root_ItemsChanged;
			for (int i = 0; i < _datasource_Root_Items.Count; i++)
			{
				GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate = new GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate);
				GameOverStatItemVM dataSource = (GameOverStatItemVM)(generatedWidgetData.Data = _datasource_Root_Items[i]);
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_0_0_0.AddChildAtIndex(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate, i);
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.CreateWidgets();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetIds();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetAttributes();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_Items(MBBindingList<GameOverStatItemVM> newDataSource)
	{
		if (_datasource_Root_Items != null)
		{
			_datasource_Root_Items.ListChanged -= OnList_datasource_Root_ItemsChanged;
			for (int num = _widget_1_0_0_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_0_0_0_0.GetChild(num);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1_0_0_0_0.GetChild(num);
				((GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
				_widget_1_0_0_0_0.RemoveChild(child2);
			}
			_datasource_Root_Items = null;
		}
		_datasource_Root_Items = newDataSource;
		_datasource_Root_Items = _datasource_Root.Items;
		if (_datasource_Root_Items != null)
		{
			_datasource_Root_Items.ListChanged += OnList_datasource_Root_ItemsChanged;
			for (int i = 0; i < _datasource_Root_Items.Count; i++)
			{
				GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate = new GameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate);
				GameOverStatItemVM dataSource = (GameOverStatItemVM)(generatedWidgetData.Data = _datasource_Root_Items[i]);
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_0_0_0.AddChildAtIndex(gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate, i);
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.CreateWidgets();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetIds();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetAttributes();
				gameOverScreen__SandBox_ViewModelCollection_GameOver_GameOverVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
