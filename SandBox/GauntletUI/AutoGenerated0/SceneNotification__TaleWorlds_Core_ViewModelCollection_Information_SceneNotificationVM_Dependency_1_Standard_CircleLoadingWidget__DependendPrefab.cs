using System.ComponentModel;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;

namespace SandBox.GauntletUI.AutoGenerated0;

public class SceneNotification__TaleWorlds_Core_ViewModelCollection_Information_SceneNotificationVM_Dependency_1_Standard_CircleLoadingWidget__DependendPrefab : Widget
{
	private Widget _widget;

	private CircleLoadingAnimWidget _widget_0;

	private Widget _widget_0_0;

	private Widget _widget_0_1;

	private Widget _widget_0_2;

	private Widget _widget_0_3;

	private Widget _widget_0_4;

	private Widget _widget_0_5;

	private Widget _widget_0_6;

	private SceneNotificationVM _datasource_Root;

	public SceneNotification__TaleWorlds_Core_ViewModelCollection_Information_SceneNotificationVM_Dependency_1_Standard_CircleLoadingWidget__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new CircleLoadingAnimWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_1 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_2 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_2);
		_widget_0_3 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_3);
		_widget_0_4 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_4);
		_widget_0_5 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_5);
		_widget_0_6 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_6);
	}

	public void SetIds()
	{
		base.Id = "StandardCircleParent";
		_widget_0.Id = "CircleLoadingWidget";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.CircleRadius = 16f;
		_widget_0.NumOfCirclesInASecond = 0.75f;
		_widget_0.StaySeconds = -1f;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedWidth = 12f;
		_widget_0_0.SuggestedHeight = 12f;
		_widget_0_0.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_0.AlphaFactor = 0.6f;
		_widget_0_0.Color = new Color(0.9490197f, 35f / 51f, 0.282353f);
		_widget_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_1.SuggestedWidth = 12f;
		_widget_0_1.SuggestedHeight = 12f;
		_widget_0_1.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_1.AlphaFactor = 0.6f;
		_widget_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2.SuggestedWidth = 12f;
		_widget_0_2.SuggestedHeight = 12f;
		_widget_0_2.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_2.AlphaFactor = 0.6f;
		_widget_0_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_3.SuggestedWidth = 12f;
		_widget_0_3.SuggestedHeight = 12f;
		_widget_0_3.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_3.AlphaFactor = 0.6f;
		_widget_0_4.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4.SuggestedWidth = 12f;
		_widget_0_4.SuggestedHeight = 12f;
		_widget_0_4.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_4.AlphaFactor = 0.6f;
		_widget_0_5.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_5.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_5.SuggestedWidth = 12f;
		_widget_0_5.SuggestedHeight = 12f;
		_widget_0_5.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_5.AlphaFactor = 0.6f;
		_widget_0_6.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_6.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_6.SuggestedWidth = 12f;
		_widget_0_6.SuggestedHeight = 12f;
		_widget_0_6.Sprite = base.Context.SpriteData.GetSprite("MapMenuUnread@2x");
		_widget_0_6.AlphaFactor = 0.6f;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_datasource_Root = null;
		}
	}

	public void SetDataSource(SceneNotificationVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
	}

	private void RefreshDataSource_datasource_Root(SceneNotificationVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		}
	}
}
