using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.WeaponCrafting.WeaponDesign.Order;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;

namespace SandBox.GauntletUI.AutoGenerated1;

public class Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_13_CraftingOrderPopup__DependendPrefab : Widget
{
	private Widget _widget;

	private Widget _widget_0;

	private Widget _widget_1;

	private Widget _widget_1_0;

	private ImageWidget _widget_1_0_0;

	private ImageWidget _widget_1_0_1;

	private ImageWidget _widget_1_0_2;

	private TextWidget _widget_1_0_3;

	private ScrollablePanel _widget_1_0_4;

	private NavigationForcedScopeCollectionTargeter _widget_1_0_4_0;

	private NavigationScopeTargeter _widget_1_0_4_1;

	private Widget _widget_1_0_4_2;

	private ListPanel _widget_1_0_4_2_0;

	private NavigatableListPanel _widget_1_0_4_2_0_0;

	private ScrollbarWidget _widget_1_0_4_3;

	private Widget _widget_1_0_4_3_0;

	private ImageWidget _widget_1_0_4_3_1;

	private ButtonWidget _widget_1_1;

	private CraftingOrderPopupVM _datasource_Root;

	private MBBindingList<CraftingOrderItemVM> _datasource_Root_CraftingOrders;

	public Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_13_CraftingOrderPopup__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new Widget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new Widget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_0_0 = new ImageWidget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_0);
		_widget_1_0_1 = new ImageWidget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_1);
		_widget_1_0_2 = new ImageWidget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_2);
		_widget_1_0_3 = new TextWidget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_3);
		_widget_1_0_4 = new ScrollablePanel(base.Context);
		_widget_1_0.AddChild(_widget_1_0_4);
		_widget_1_0_4_0 = new NavigationForcedScopeCollectionTargeter(base.Context);
		_widget_1_0_4.AddChild(_widget_1_0_4_0);
		_widget_1_0_4_1 = new NavigationScopeTargeter(base.Context);
		_widget_1_0_4.AddChild(_widget_1_0_4_1);
		_widget_1_0_4_2 = new Widget(base.Context);
		_widget_1_0_4.AddChild(_widget_1_0_4_2);
		_widget_1_0_4_2_0 = new ListPanel(base.Context);
		_widget_1_0_4_2.AddChild(_widget_1_0_4_2_0);
		_widget_1_0_4_2_0_0 = new NavigatableListPanel(base.Context);
		_widget_1_0_4_2_0.AddChild(_widget_1_0_4_2_0_0);
		_widget_1_0_4_3 = new ScrollbarWidget(base.Context);
		_widget_1_0_4.AddChild(_widget_1_0_4_3);
		_widget_1_0_4_3_0 = new Widget(base.Context);
		_widget_1_0_4_3.AddChild(_widget_1_0_4_3_0);
		_widget_1_0_4_3_1 = new ImageWidget(base.Context);
		_widget_1_0_4_3.AddChild(_widget_1_0_4_3_1);
		_widget_1_1 = new ButtonWidget(base.Context);
		_widget_1.AddChild(_widget_1_1);
	}

	public void SetIds()
	{
		base.Id = "CraftingOrderPopup";
		_widget_1_0_4_2.Id = "ClipRect";
		_widget_1_0_4_2_0.Id = "OrderList";
		_widget_1_0_4_2_0_0.Id = "OrderList";
		_widget_1_0_4_3.Id = "HorizontalScrollbar";
		_widget_1_0_4_3_1.Id = "HorizontalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_0.Color = new Color(0f, 0f, 0f);
		_widget_0.AlphaFactor = 0.6f;
		_widget_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1.SuggestedWidth = 1370f;
		_widget_1.SuggestedHeight = 680f;
		_widget_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.MarginTop = 35f;
		_widget_1_0.MarginRight = 35f;
		_widget_1_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_0.Sprite = base.Context.SpriteData.GetSprite("StdAssets\\Popup\\order_popup_canvas");
		_widget_1_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_1.Sprite = base.Context.SpriteData.GetSprite("StdAssets\\Popup\\canvas_gradient");
		_widget_1_0_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_2.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_2.MarginLeft = -20f;
		_widget_1_0_2.MarginTop = -20f;
		_widget_1_0_2.MarginRight = -20f;
		_widget_1_0_2.MarginBottom = -20f;
		_widget_1_0_2.Sprite = base.Context.SpriteData.GetSprite("frame_9");
		_widget_1_0_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_0_3.SuggestedHeight = 45f;
		_widget_1_0_3.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_3.MarginTop = 10f;
		_widget_1_0_3.Brush = base.Context.GetBrush("InventoryHeaderFontBrush");
		_widget_1_0_3.Brush.FontSize = 34;
		_widget_1_0_4.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4.MarginTop = 60f;
		_widget_1_0_4.MarginBottom = 60f;
		_widget_1_0_4.MarginLeft = 40f;
		_widget_1_0_4.MarginRight = 40f;
		_widget_1_0_4.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_4.ClipRect = _widget_1_0_4_2;
		_widget_1_0_4.InnerPanel = _widget_1_0_4_2_0;
		_widget_1_0_4.HorizontalScrollbar = _widget_1_0_4_3;
		_widget_1_0_4.AutoHideScrollBars = true;
		_widget_1_0_4.Sprite = base.Context.SpriteData.GetSprite("scrollable_field_9");
		_widget_1_0_4.Color = new Color(1f, 1f, 1f);
		_widget_1_0_4_0.CollectionParent = _widget_1_0_4_2;
		_widget_1_0_4_1.ScopeID = "OrderPopupScope";
		_widget_1_0_4_1.ScopeParent = _widget_1_0_4_2;
		_widget_1_0_4_1.ScopeMovements = GamepadNavigationTypes.Horizontal;
		_widget_1_0_4_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_2.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_2.MarginTop = 7f;
		_widget_1_0_4_2.MarginBottom = 7f;
		_widget_1_0_4_2.MarginLeft = 9f;
		_widget_1_0_4_2.MarginRight = 9f;
		_widget_1_0_4_2.ClipContents = true;
		_widget_1_0_4_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_4_2_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_2_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_1_0_4_2_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_4_2_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_2_0_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_1_0_4_3.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_0_4_3.SuggestedHeight = 6f;
		_widget_1_0_4_3.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_4_3.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1_0_4_3.MarginLeft = 15f;
		_widget_1_0_4_3.MarginRight = 15f;
		_widget_1_0_4_3.MarginBottom = 5f;
		_widget_1_0_4_3.AlignmentAxis = AlignmentAxis.Horizontal;
		_widget_1_0_4_3.Handle = _widget_1_0_4_3_1;
		_widget_1_0_4_3.MaxValue = 100f;
		_widget_1_0_4_3.MinValue = 0f;
		_widget_1_0_4_3_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0_4_3_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_3_0.SuggestedWidth = 6f;
		_widget_1_0_4_3_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_4_3_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_1_0_4_3_0.AlphaFactor = 0.2f;
		_widget_1_0_4_3_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_1_0_4_3_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0_4_3_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0_4_3_1.SuggestedWidth = 10f;
		_widget_1_0_4_3_1.MarginTop = 1f;
		_widget_1_0_4_3_1.MarginBottom = 1f;
		_widget_1_0_4_3_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_4_3_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
		_widget_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1.SuggestedWidth = 70f;
		_widget_1_1.SuggestedHeight = 70f;
		_widget_1_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_1_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_1_1.Brush = base.Context.GetBrush("Popup.CloseButton");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1_0_3.PropertyChanged -= PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_1.EventFire -= EventListenerOf_widget_1_1;
		if (_datasource_Root_CraftingOrders != null)
		{
			_datasource_Root_CraftingOrders.ListChanged -= OnList_datasource_Root_CraftingOrdersChanged;
			for (int num = _widget_1_0_4_2_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_0_4_2_0_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)_widget_1_0_4_2_0_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_CraftingOrders = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(CraftingOrderPopupVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget_1_1(Widget widget, string commandName, object[] args)
	{
		if (commandName == "Click")
		{
			_datasource_Root.ExecuteCloseWithoutSelection();
		}
	}

	private void PropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_3(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0_3(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.OrderCountText = _widget_1_0_3.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "CraftingOrders")
		{
			RefreshDataSource_datasource_Root_CraftingOrders(_datasource_Root.CraftingOrders);
		}
		else if (propertyName == "OrderCountText")
		{
			_widget_1_0_3.Text = _datasource_Root.OrderCountText;
		}
	}

	public void OnList_datasource_Root_CraftingOrdersChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1_0_4_2_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1_0_4_2_0_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1_0_4_2_0_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child4).SetDataSource(null);
				_widget_1_0_4_2_0_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_CraftingOrders.Count; i++)
			{
				CraftingOrderItemVM bindingObject = _datasource_Root_CraftingOrders[i];
				_widget_1_0_4_2_0_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate);
			CraftingOrderItemVM dataSource = (CraftingOrderItemVM)(generatedWidgetData.Data = _datasource_Root_CraftingOrders[e.NewIndex]);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1_0_4_2_0_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate, e.NewIndex);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.CreateWidgets();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetIds();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetAttributes();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1_0_4_2_0_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1_0_4_2_0_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child).SetDataSource(null);
			_widget_1_0_4_2_0_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(CraftingOrderPopupVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1_0_3.PropertyChanged -= PropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0_3;
			_widget_1_0_3.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0_3;
			_widget_1_1.EventFire -= EventListenerOf_widget_1_1;
			if (_datasource_Root_CraftingOrders != null)
			{
				_datasource_Root_CraftingOrders.ListChanged -= OnList_datasource_Root_CraftingOrdersChanged;
				for (int num = _widget_1_0_4_2_0_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1_0_4_2_0_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1_0_4_2_0_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child2).SetDataSource(null);
					_widget_1_0_4_2_0_0.RemoveChild(child2);
				}
				_datasource_Root_CraftingOrders = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1_0_3.Text = _datasource_Root.OrderCountText;
		_widget_1_0_3.PropertyChanged += PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_0_3.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0_3;
		_widget_1_1.EventFire += EventListenerOf_widget_1_1;
		_datasource_Root_CraftingOrders = _datasource_Root.CraftingOrders;
		if (_datasource_Root_CraftingOrders != null)
		{
			_datasource_Root_CraftingOrders.ListChanged += OnList_datasource_Root_CraftingOrdersChanged;
			for (int i = 0; i < _datasource_Root_CraftingOrders.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate);
				CraftingOrderItemVM dataSource = (CraftingOrderItemVM)(generatedWidgetData.Data = _datasource_Root_CraftingOrders[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_4_2_0_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_CraftingOrders(MBBindingList<CraftingOrderItemVM> newDataSource)
	{
		if (_datasource_Root_CraftingOrders != null)
		{
			_datasource_Root_CraftingOrders.ListChanged -= OnList_datasource_Root_CraftingOrdersChanged;
			for (int num = _widget_1_0_4_2_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_0_4_2_0_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1_0_4_2_0_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate)child2).SetDataSource(null);
				_widget_1_0_4_2_0_0.RemoveChild(child2);
			}
			_datasource_Root_CraftingOrders = null;
		}
		_datasource_Root_CraftingOrders = newDataSource;
		_datasource_Root_CraftingOrders = _datasource_Root.CraftingOrders;
		if (_datasource_Root_CraftingOrders != null)
		{
			_datasource_Root_CraftingOrders.ListChanged += OnList_datasource_Root_CraftingOrdersChanged;
			for (int i = 0; i < _datasource_Root_CraftingOrders.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate);
				CraftingOrderItemVM dataSource = (CraftingOrderItemVM)(generatedWidgetData.Data = _datasource_Root_CraftingOrders[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_4_2_0_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
