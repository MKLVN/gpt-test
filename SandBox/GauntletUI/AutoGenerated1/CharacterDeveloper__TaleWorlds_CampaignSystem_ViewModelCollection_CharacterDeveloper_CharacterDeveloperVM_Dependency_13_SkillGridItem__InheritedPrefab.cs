using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.CharacterDeveloper;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.ExtraWidgets;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.CharacterDeveloper;

namespace SandBox.GauntletUI.AutoGenerated1;

public class CharacterDeveloper__TaleWorlds_CampaignSystem_ViewModelCollection_CharacterDeveloper_CharacterDeveloperVM_Dependency_13_SkillGridItem__InheritedPrefab : SkillGridItemButtonWidget
{
	private SkillGridItemButtonWidget _widget;

	private TextWidget _widget_0;

	private Widget _widget_1;

	private SkillIconVisualWidget _widget_1_0;

	private TextWidget _widget_2;

	private BrushWidget _widget_3;

	private SkillPointsContainerListPanel _widget_4;

	private BrushWidget _widget_4_0;

	private BrushWidget _widget_4_1;

	private BrushWidget _widget_4_2;

	private BrushWidget _widget_4_3;

	private BrushWidget _widget_4_4;

	private ValueBasedVisibilityWidget _widget_5;

	private BrushWidget _widget_5_0;

	private TextWidget _widget_5_1;

	private SkillVM _datasource_Root;

	public CharacterDeveloper__TaleWorlds_CampaignSystem_ViewModelCollection_CharacterDeveloper_CharacterDeveloperVM_Dependency_13_SkillGridItem__InheritedPrefab(UIContext context)
		: base(context)
	{
	}

	public virtual void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new TextWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new Widget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new SkillIconVisualWidget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_2 = new TextWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_3 = new BrushWidget(base.Context);
		_widget.AddChild(_widget_3);
		_widget_4 = new SkillPointsContainerListPanel(base.Context);
		_widget.AddChild(_widget_4);
		_widget_4_0 = new BrushWidget(base.Context);
		_widget_4.AddChild(_widget_4_0);
		_widget_4_1 = new BrushWidget(base.Context);
		_widget_4.AddChild(_widget_4_1);
		_widget_4_2 = new BrushWidget(base.Context);
		_widget_4.AddChild(_widget_4_2);
		_widget_4_3 = new BrushWidget(base.Context);
		_widget_4.AddChild(_widget_4_3);
		_widget_4_4 = new BrushWidget(base.Context);
		_widget_4.AddChild(_widget_4_4);
		_widget_5 = new ValueBasedVisibilityWidget(base.Context);
		_widget.AddChild(_widget_5);
		_widget_5_0 = new BrushWidget(base.Context);
		_widget_5.AddChild(_widget_5_0);
		_widget_5_1 = new TextWidget(base.Context);
		_widget_5.AddChild(_widget_5_1);
	}

	public virtual void SetIds()
	{
		_widget_3.Id = "FocusLevelWidget";
	}

	public virtual void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.Fixed;
		base.HeightSizePolicy = SizePolicy.Fixed;
		base.SuggestedWidth = 174f;
		base.SuggestedHeight = 126f;
		base.VerticalAlignment = VerticalAlignment.Top;
		base.CanLearnBrush = base.Context.GetBrush("CharacterDeveloper.SkillButtonBackground");
		base.CannotLearnBrush = base.Context.GetBrush("CharacterDeveloper.SkillButtonBackground.CannotLearn");
		base.FocusLevelWidget = _widget_3;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedHeight = 30f;
		_widget_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0.MarginLeft = 10f;
		_widget_0.Brush = base.Context.GetBrush("CharacterDeveloper.GridSkillName.Text");
		_widget_0.DoNotAcceptEvents = true;
		_widget_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1.SuggestedWidth = 92f;
		_widget_1.SuggestedHeight = 94f;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_1.MarginLeft = 0f;
		_widget_1.MarginTop = 28f;
		_widget_1.Sprite = base.Context.SpriteData.GetSprite("CharacterDeveloper\\skills_icon_shadow");
		_widget_1.IsDisabled = true;
		_widget_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_0.SuggestedWidth = 76f;
		_widget_1_0.SuggestedHeight = 76f;
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_0.UseSmallVariation = true;
		_widget_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_2.SuggestedWidth = 80f;
		_widget_2.SuggestedHeight = 40f;
		_widget_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2.VerticalAlignment = VerticalAlignment.Top;
		_widget_2.MarginLeft = 82f;
		_widget_2.MarginTop = 40f;
		_widget_2.Brush = base.Context.GetBrush("CharacterDeveloper.GridSkillLevel.Text");
		_widget_2.DoNotAcceptEvents = true;
		_widget_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_3.SuggestedWidth = 87f;
		_widget_3.SuggestedHeight = 43f;
		_widget_3.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_3.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_3.MarginRight = 3f;
		_widget_3.MarginBottom = 10f;
		_widget_3.Brush = base.Context.GetBrush("SkillFocusLevelBrush");
		_widget_3.IsDisabled = true;
		_widget_3.IsVisible = false;
		_widget_4.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_4.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_4.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_4.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_4.MarginBottom = 16f;
		_widget_4.MarginRight = 5f;
		_widget_4.IsEnabled = false;
		_widget_4_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_4_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_4_0.SuggestedWidth = 11f;
		_widget_4_0.SuggestedHeight = 30f;
		_widget_4_0.Brush = base.Context.GetBrush("Skill.Point.Small");
		_widget_4_0.MarginRight = 5f;
		_widget_4_0.ForcePixelPerfectRenderPlacement = true;
		_widget_4_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_4_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_4_1.SuggestedWidth = 11f;
		_widget_4_1.SuggestedHeight = 30f;
		_widget_4_1.Brush = base.Context.GetBrush("Skill.Point.Small");
		_widget_4_1.MarginRight = 5f;
		_widget_4_1.ForcePixelPerfectRenderPlacement = true;
		_widget_4_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_4_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_4_2.SuggestedWidth = 11f;
		_widget_4_2.SuggestedHeight = 30f;
		_widget_4_2.Brush = base.Context.GetBrush("Skill.Point.Small");
		_widget_4_2.MarginRight = 5f;
		_widget_4_2.ForcePixelPerfectRenderPlacement = true;
		_widget_4_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_4_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_4_3.SuggestedWidth = 11f;
		_widget_4_3.SuggestedHeight = 30f;
		_widget_4_3.Brush = base.Context.GetBrush("Skill.Point.Small");
		_widget_4_3.MarginRight = 5f;
		_widget_4_3.ForcePixelPerfectRenderPlacement = true;
		_widget_4_4.WidthSizePolicy = SizePolicy.Fixed;
		_widget_4_4.HeightSizePolicy = SizePolicy.Fixed;
		_widget_4_4.SuggestedWidth = 11f;
		_widget_4_4.SuggestedHeight = 30f;
		_widget_4_4.Brush = base.Context.GetBrush("Skill.Point.Small");
		_widget_4_4.MarginRight = 2f;
		_widget_4_4.ForcePixelPerfectRenderPlacement = true;
		_widget_5.WidthSizePolicy = SizePolicy.Fixed;
		_widget_5.HeightSizePolicy = SizePolicy.Fixed;
		_widget_5.SuggestedWidth = 33f;
		_widget_5.SuggestedHeight = 36f;
		_widget_5.IndexToBeVisible = 0;
		_widget_5.WatchType = ValueBasedVisibilityWidget.WatchTypes.BiggerThan;
		_widget_5.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_5.VerticalAlignment = VerticalAlignment.Top;
		_widget_5.PositionYOffset = -4f;
		_widget_5.IsEnabled = false;
		_widget_5_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_5_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_5_0.Brush = base.Context.GetBrush("CharacterDeveloper.PerkNotificationBrush");
		_widget_5_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_5_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_5_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_5_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_5_1.Brush.FontSize = 18;
		_widget_5_1.ClipContents = false;
	}

	public virtual void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_4.PropertyChanged -= PropertyChangedListenerOf_widget_4;
			_widget_4.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_4;
			_widget_4.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_4;
			_widget_4.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_4;
			_widget_4.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_4;
			_widget_4.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_4;
			_widget_4.intPropertyChanged -= intPropertyChangedListenerOf_widget_4;
			_widget_4.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_4;
			_widget_4.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_4;
			_widget_5.PropertyChanged -= PropertyChangedListenerOf_widget_5;
			_widget_5.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_5;
			_widget_5.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_5;
			_widget_5.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_5;
			_widget_5.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_5;
			_widget_5.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_5;
			_widget_5.intPropertyChanged -= intPropertyChangedListenerOf_widget_5;
			_widget_5.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_5;
			_widget_5.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_5;
			_widget_5_1.PropertyChanged -= PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_5_1;
			_widget_5_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_5_1;
			_datasource_Root = null;
		}
	}

	public virtual void SetDataSource(SkillVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget(Widget widget, string commandName, object[] args)
	{
		if (commandName == "Click")
		{
			_datasource_Root.ExecuteInspect();
		}
		if (commandName == "AlternateClick")
		{
			_datasource_Root.ExecuteShowSkillConcept();
		}
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		switch (propertyName)
		{
		case "CurrentFocusLevel":
			_datasource_Root.CurrentFocusLevel = _widget.CurrentFocusLevel;
			break;
		case "IsSelected":
			_datasource_Root.IsInspected = _widget.IsSelected;
			break;
		case "CanLearnSkill":
			_datasource_Root.CanLearnSkill = _widget.CanLearnSkill;
			break;
		}
	}

	private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
	{
		if (propertyName == "IsEnabled")
		{
			_datasource_Root.CanLearnSkill = _widget_0.IsEnabled;
		}
		else if (propertyName == "Text")
		{
			_datasource_Root.NameText = _widget_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0(string propertyName)
	{
		if (propertyName == "SkillId")
		{
			_datasource_Root.SkillId = _widget_1_0.SkillId;
		}
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.Level = _widget_2.IntText;
		}
		else if (propertyName == "IsEnabled")
		{
			_datasource_Root.CanLearnSkill = _widget_2.IsEnabled;
		}
	}

	private void PropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_4(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_4(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_4(string propertyName)
	{
		if (propertyName == "CurrentFocusLevel")
		{
			_datasource_Root.CurrentFocusLevel = _widget_4.CurrentFocusLevel;
		}
	}

	private void PropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_5(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_5(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_5(string propertyName)
	{
		if (propertyName == "IndexToWatch")
		{
			_datasource_Root.NumOfUnopenedPerks = _widget_5.IndexToWatch;
		}
	}

	private void PropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_5_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_5_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_5_1(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.NumOfUnopenedPerks = _widget_5_1.IntText;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "CurrentFocusLevel":
			_widget.CurrentFocusLevel = _datasource_Root.CurrentFocusLevel;
			_widget_4.CurrentFocusLevel = _datasource_Root.CurrentFocusLevel;
			break;
		case "IsInspected":
			_widget.IsSelected = _datasource_Root.IsInspected;
			break;
		case "CanLearnSkill":
			_widget.CanLearnSkill = _datasource_Root.CanLearnSkill;
			_widget_0.IsEnabled = _datasource_Root.CanLearnSkill;
			_widget_2.IsEnabled = _datasource_Root.CanLearnSkill;
			break;
		case "NameText":
			_widget_0.Text = _datasource_Root.NameText;
			break;
		case "SkillId":
			_widget_1_0.SkillId = _datasource_Root.SkillId;
			break;
		case "Level":
			_widget_2.IntText = _datasource_Root.Level;
			break;
		case "NumOfUnopenedPerks":
			_widget_5.IndexToWatch = _datasource_Root.NumOfUnopenedPerks;
			_widget_5_1.IntText = _datasource_Root.NumOfUnopenedPerks;
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(SkillVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_4.PropertyChanged -= PropertyChangedListenerOf_widget_4;
			_widget_4.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_4;
			_widget_4.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_4;
			_widget_4.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_4;
			_widget_4.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_4;
			_widget_4.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_4;
			_widget_4.intPropertyChanged -= intPropertyChangedListenerOf_widget_4;
			_widget_4.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_4;
			_widget_4.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_4;
			_widget_5.PropertyChanged -= PropertyChangedListenerOf_widget_5;
			_widget_5.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_5;
			_widget_5.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_5;
			_widget_5.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_5;
			_widget_5.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_5;
			_widget_5.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_5;
			_widget_5.intPropertyChanged -= intPropertyChangedListenerOf_widget_5;
			_widget_5.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_5;
			_widget_5.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_5;
			_widget_5_1.PropertyChanged -= PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_5_1;
			_widget_5_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_5_1;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.CurrentFocusLevel = _datasource_Root.CurrentFocusLevel;
			_widget.IsSelected = _datasource_Root.IsInspected;
			_widget.CanLearnSkill = _datasource_Root.CanLearnSkill;
			_widget.EventFire += EventListenerOf_widget;
			_widget.PropertyChanged += PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
			_widget_0.IsEnabled = _datasource_Root.CanLearnSkill;
			_widget_0.Text = _datasource_Root.NameText;
			_widget_0.PropertyChanged += PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0;
			_widget_1_0.SkillId = _datasource_Root.SkillId;
			_widget_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0;
			_widget_2.IntText = _datasource_Root.Level;
			_widget_2.IsEnabled = _datasource_Root.CanLearnSkill;
			_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
			_widget_4.CurrentFocusLevel = _datasource_Root.CurrentFocusLevel;
			_widget_4.PropertyChanged += PropertyChangedListenerOf_widget_4;
			_widget_4.boolPropertyChanged += boolPropertyChangedListenerOf_widget_4;
			_widget_4.floatPropertyChanged += floatPropertyChangedListenerOf_widget_4;
			_widget_4.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_4;
			_widget_4.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_4;
			_widget_4.doublePropertyChanged += doublePropertyChangedListenerOf_widget_4;
			_widget_4.intPropertyChanged += intPropertyChangedListenerOf_widget_4;
			_widget_4.uintPropertyChanged += uintPropertyChangedListenerOf_widget_4;
			_widget_4.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_4;
			_widget_5.IndexToWatch = _datasource_Root.NumOfUnopenedPerks;
			_widget_5.PropertyChanged += PropertyChangedListenerOf_widget_5;
			_widget_5.boolPropertyChanged += boolPropertyChangedListenerOf_widget_5;
			_widget_5.floatPropertyChanged += floatPropertyChangedListenerOf_widget_5;
			_widget_5.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_5;
			_widget_5.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_5;
			_widget_5.doublePropertyChanged += doublePropertyChangedListenerOf_widget_5;
			_widget_5.intPropertyChanged += intPropertyChangedListenerOf_widget_5;
			_widget_5.uintPropertyChanged += uintPropertyChangedListenerOf_widget_5;
			_widget_5.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_5;
			_widget_5_1.IntText = _datasource_Root.NumOfUnopenedPerks;
			_widget_5_1.PropertyChanged += PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_5_1;
			_widget_5_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_5_1;
			_widget_5_1.intPropertyChanged += intPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_5_1;
			_widget_5_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_5_1;
		}
	}
}
