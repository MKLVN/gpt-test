using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.Inventory;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Information;

namespace SandBox.GauntletUI.AutoGenerated1;

public class Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_37_ItemTemplate : TooltipPropertyWidget
{
	private TooltipPropertyWidget _widget;

	private ListPanel _widget_0;

	private ListPanel _widget_0_0;

	private Widget _widget_0_0_0;

	private RichTextWidget _widget_0_0_0_0;

	private Widget _widget_0_0_1;

	private RichTextWidget _widget_0_0_1_0;

	private ItemMenuTooltipPropertyVM _datasource_Root;

	private HintViewModel _datasource_Root_PropertyHint;

	public Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_37_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new ListPanel(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_0_0 = new RichTextWidget(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_0);
		_widget_0_0_1 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_1_0 = new RichTextWidget(base.Context);
		_widget_0_0_1.AddChild(_widget_0_0_1_0);
	}

	public void SetIds()
	{
		_widget_0.Id = "ListPanel";
		_widget_0_0.Id = "ValueBackgroundSpriteWidget";
		_widget_0_0_0.Id = "DefinitionLabelContainer";
		_widget_0_0_0_0.Id = "DefinitionLabel";
		_widget_0_0_1.Id = "ValueLabelContainer";
		_widget_0_0_1_0.Id = "ValueLabel";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.HorizontalAlignment = HorizontalAlignment.Left;
		base.MarginLeft = 3f;
		base.MarginRight = 3f;
		base.DefaultSeperatorSpriteName = "General\\TooltipHint\\tooltip_frame";
		base.DefinitionLabelContainer = _widget_0_0_0;
		base.DefinitionLabel = _widget_0_0_0_0;
		base.DescriptionTextBrush = base.Context.GetBrush("Tooltip.Description.Text");
		base.RundownSeperatorSpriteName = "tooltip_divider_abovestats_9";
		base.SubtextBrush = base.Context.GetBrush("Tooltip.SubText.Text");
		base.TitleBackgroundSpriteName = "General\\TooltipHint\\tooltip_title_base";
		base.TitleTextBrush = base.Context.GetBrush("Tooltip.Title.Text");
		base.ValueBackgroundSpriteWidget = _widget_0_0;
		base.ValueLabel = _widget_0_0_1_0;
		base.ValueLabelContainer = _widget_0_0_1;
		base.ValueNameTextBrush = base.Context.GetBrush("Tooltip.ValueName.Text");
		base.ValueTextBrush = base.Context.GetBrush("Tooltip.Value.Text");
		_widget_0.DoNotPassEventsToChildren = true;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_0_0.Brush = base.Context.GetBrush("InventoryTooltipDescriptionFontBrush");
		_widget_0_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_1_0.Brush = base.Context.GetBrush("Tooltip.Value.Text");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			if (_datasource_Root_PropertyHint != null)
			{
				_datasource_Root_PropertyHint.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint;
				_widget_0.EventFire -= EventListenerOf_widget_0;
				_datasource_Root_PropertyHint = null;
			}
			_datasource_Root = null;
		}
	}

	public void SetDataSource(ItemMenuTooltipPropertyVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget_0(Widget widget, string commandName, object[] args)
	{
		if (commandName == "HoverBegin")
		{
			_datasource_Root_PropertyHint.ExecuteBeginHint();
		}
		if (commandName == "HoverEnd")
		{
			_datasource_Root_PropertyHint.ExecuteEndHint();
		}
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		switch (propertyName)
		{
		case "DefinitionText":
			_datasource_Root.DefinitionLabel = _widget.DefinitionText;
			break;
		case "TextColor":
			_datasource_Root.TextColor = _widget.TextColor;
			break;
		case "TextHeight":
			_datasource_Root.TextHeight = _widget.TextHeight;
			break;
		case "ValueText":
			_datasource_Root.ValueLabel = _widget.ValueText;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "PropertyHint":
			RefreshDataSource_datasource_Root_PropertyHint(_datasource_Root.PropertyHint);
			break;
		case "DefinitionLabel":
			_widget.DefinitionText = _datasource_Root.DefinitionLabel;
			break;
		case "TextColor":
			_widget.TextColor = _datasource_Root.TextColor;
			break;
		case "TextHeight":
			_widget.TextHeight = _datasource_Root.TextHeight;
			break;
		case "ValueLabel":
			_widget.ValueText = _datasource_Root.ValueLabel;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_PropertyHint(string propertyName)
	{
	}

	private void RefreshDataSource_datasource_Root(ItemMenuTooltipPropertyVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			if (_datasource_Root_PropertyHint != null)
			{
				_datasource_Root_PropertyHint.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint;
				_widget_0.EventFire -= EventListenerOf_widget_0;
				_datasource_Root_PropertyHint = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.DefinitionText = _datasource_Root.DefinitionLabel;
			_widget.TextColor = _datasource_Root.TextColor;
			_widget.TextHeight = _datasource_Root.TextHeight;
			_widget.ValueText = _datasource_Root.ValueLabel;
			_widget.PropertyChanged += PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
			_datasource_Root_PropertyHint = _datasource_Root.PropertyHint;
			if (_datasource_Root_PropertyHint != null)
			{
				_datasource_Root_PropertyHint.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint;
				_datasource_Root_PropertyHint.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint;
				_widget_0.EventFire += EventListenerOf_widget_0;
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PropertyHint(HintViewModel newDataSource)
	{
		if (_datasource_Root_PropertyHint != null)
		{
			_datasource_Root_PropertyHint.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint;
			_widget_0.EventFire -= EventListenerOf_widget_0;
			_datasource_Root_PropertyHint = null;
		}
		_datasource_Root_PropertyHint = newDataSource;
		_datasource_Root_PropertyHint = _datasource_Root.PropertyHint;
		if (_datasource_Root_PropertyHint != null)
		{
			_datasource_Root_PropertyHint.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PropertyHint;
			_datasource_Root_PropertyHint.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PropertyHint;
			_widget_0.EventFire += EventListenerOf_widget_0;
		}
	}
}
