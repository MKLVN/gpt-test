using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.ClanManagement.Supporters;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.TwoDimension;

namespace SandBox.GauntletUI.AutoGenerated1;

public class ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_36_ClanSupporters__DependendPrefab : ListPanel
{
	private ListPanel _widget;

	private TextWidget _widget_0;

	private RichTextWidget _widget_1;

	private Widget _widget_2;

	private ScrollablePanel _widget_2_0;

	private Widget _widget_2_0_0;

	private NavigationScopeTargeter _widget_2_0_0_0;

	private NavigatableGridWidget _widget_2_0_0_1;

	private ScrollbarWidget _widget_2_1;

	private Widget _widget_2_1_0;

	private ImageWidget _widget_2_1_1;

	private ClanSupporterGroupVM _datasource_Root;

	private MBBindingList<ClanSupporterItemVM> _datasource_Root_Supporters;

	public ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_36_ClanSupporters__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new TextWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new RichTextWidget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_2 = new Widget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new ScrollablePanel(base.Context);
		_widget_2.AddChild(_widget_2_0);
		_widget_2_0_0 = new Widget(base.Context);
		_widget_2_0.AddChild(_widget_2_0_0);
		_widget_2_0_0_0 = new NavigationScopeTargeter(base.Context);
		_widget_2_0_0.AddChild(_widget_2_0_0_0);
		_widget_2_0_0_1 = new NavigatableGridWidget(base.Context);
		_widget_2_0_0.AddChild(_widget_2_0_0_1);
		_widget_2_1 = new ScrollbarWidget(base.Context);
		_widget_2.AddChild(_widget_2_1);
		_widget_2_1_0 = new Widget(base.Context);
		_widget_2_1.AddChild(_widget_2_1_0);
		_widget_2_1_1 = new ImageWidget(base.Context);
		_widget_2_1.AddChild(_widget_2_1_1);
	}

	public void SetIds()
	{
		_widget_2_0_0.Id = "ClipRect";
		_widget_2_0_0_1.Id = "Supporters";
		_widget_2_1.Id = "VerticalScrollbar";
		_widget_2_1_1.Id = "VerticalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.VerticalAlignment = VerticalAlignment.Top;
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.Brush = base.Context.GetBrush("Clan.RightPanel.Name.Text");
		_widget_0.MarginBottom = 15f;
		_widget_0.Brush.TextHorizontalAlignment = TextHorizontalAlignment.Center;
		_widget_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.Brush = base.Context.GetBrush("Clan.Supporter.Influence.Description.Text");
		_widget_1.MarginBottom = 15f;
		_widget_1.Brush.TextHorizontalAlignment = TextHorizontalAlignment.Center;
		_widget_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_2.SuggestedHeight = 650f;
		_widget_2_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0.MarginRight = 8f;
		_widget_2_0.AutoHideScrollBars = true;
		_widget_2_0.ClipRect = _widget_2_0_0;
		_widget_2_0.InnerPanel = _widget_2_0_0_1;
		_widget_2_0.VerticalScrollbar = _widget_2_1;
		_widget_2_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0_0.ClipContents = true;
		_widget_2_0_0_0.ScopeID = "ClanSupportersScope";
		_widget_2_0_0_0.ScopeParent = _widget_2_0_0_1;
		_widget_2_0_0_0.ScopeMovements = GamepadNavigationTypes.Horizontal;
		_widget_2_0_0_0.HasCircularMovement = false;
		_widget_2_0_0_0.ExtendDiscoveryAreaLeft = 100f;
		_widget_2_0_0_0.ExtendDiscoveryAreaRight = 350f;
		_widget_2_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2_0_0_1.SuggestedWidth = 350f;
		_widget_2_0_0_1.SuggestedHeight = 350f;
		_widget_2_0_0_1.DefaultCellWidth = 115f;
		_widget_2_0_0_1.DefaultCellHeight = 130f;
		_widget_2_0_0_1.ColumnCount = 5;
		_widget_2_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_2_1.SuggestedHeight = 460f;
		_widget_2_1.SuggestedWidth = 8f;
		_widget_2_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_2_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_2_1.MarginTop = 6f;
		_widget_2_1.MarginBottom = 15f;
		_widget_2_1.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_2_1.Handle = _widget_2_1_1;
		_widget_2_1.MaxValue = 100f;
		_widget_2_1.MinValue = 0f;
		_widget_2_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_2_1_0.SuggestedWidth = 4f;
		_widget_2_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2_1_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_2_1_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_2_1_0.AlphaFactor = 0.2f;
		_widget_2_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_2_1_1.SuggestedHeight = 10f;
		_widget_2_1_1.SuggestedWidth = 8f;
		_widget_2_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2_1_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
		_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
		if (_datasource_Root_Supporters != null)
		{
			_datasource_Root_Supporters.ListChanged -= OnList_datasource_Root_SupportersChanged;
			for (int num = _widget_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_2_0_0_1.GetChild(num);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child).OnBeforeRemovedChild(child);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)_widget_2_0_0_1.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_Supporters = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(ClanSupporterGroupVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.TitleText = _widget_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.InfluenceBonusDescription = _widget_1.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "Supporters":
			RefreshDataSource_datasource_Root_Supporters(_datasource_Root.Supporters);
			break;
		case "TitleText":
			_widget_0.Text = _datasource_Root.TitleText;
			break;
		case "InfluenceBonusDescription":
			_widget_1.Text = _datasource_Root.InfluenceBonusDescription;
			break;
		}
	}

	public void OnList_datasource_Root_SupportersChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_2_0_0_1.GetChild(num);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_2_0_0_1.GetChild(num);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child4).SetDataSource(null);
				_widget_2_0_0_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_Supporters.Count; i++)
			{
				ClanSupporterItemVM bindingObject = _datasource_Root_Supporters[i];
				_widget_2_0_0_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate = new ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate);
			ClanSupporterItemVM dataSource = (ClanSupporterItemVM)(generatedWidgetData.Data = _datasource_Root_Supporters[e.NewIndex]);
			clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_2_0_0_1.AddChildAtIndex(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate, e.NewIndex);
			clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.CreateWidgets();
			clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetIds();
			clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetAttributes();
			clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_2_0_0_1.GetChild(e.NewIndex);
			((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_2_0_0_1.GetChild(e.NewIndex);
			((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child).SetDataSource(null);
			_widget_2_0_0_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(ClanSupporterGroupVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			if (_datasource_Root_Supporters != null)
			{
				_datasource_Root_Supporters.ListChanged -= OnList_datasource_Root_SupportersChanged;
				for (int num = _widget_2_0_0_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_2_0_0_1.GetChild(num);
					((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_2_0_0_1.GetChild(num);
					((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child2).SetDataSource(null);
					_widget_2_0_0_1.RemoveChild(child2);
				}
				_datasource_Root_Supporters = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.Text = _datasource_Root.TitleText;
		_widget_0.PropertyChanged += PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0;
		_widget_1.Text = _datasource_Root.InfluenceBonusDescription;
		_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
		_datasource_Root_Supporters = _datasource_Root.Supporters;
		if (_datasource_Root_Supporters != null)
		{
			_datasource_Root_Supporters.ListChanged += OnList_datasource_Root_SupportersChanged;
			for (int i = 0; i < _datasource_Root_Supporters.Count; i++)
			{
				ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate = new ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate);
				ClanSupporterItemVM dataSource = (ClanSupporterItemVM)(generatedWidgetData.Data = _datasource_Root_Supporters[i]);
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_2_0_0_1.AddChildAtIndex(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate, i);
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.CreateWidgets();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetIds();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetAttributes();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_Supporters(MBBindingList<ClanSupporterItemVM> newDataSource)
	{
		if (_datasource_Root_Supporters != null)
		{
			_datasource_Root_Supporters.ListChanged -= OnList_datasource_Root_SupportersChanged;
			for (int num = _widget_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_2_0_0_1.GetChild(num);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_2_0_0_1.GetChild(num);
				((ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate)child2).SetDataSource(null);
				_widget_2_0_0_1.RemoveChild(child2);
			}
			_datasource_Root_Supporters = null;
		}
		_datasource_Root_Supporters = newDataSource;
		_datasource_Root_Supporters = _datasource_Root.Supporters;
		if (_datasource_Root_Supporters != null)
		{
			_datasource_Root_Supporters.ListChanged += OnList_datasource_Root_SupportersChanged;
			for (int i = 0; i < _datasource_Root_Supporters.Count; i++)
			{
				ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate = new ClanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate);
				ClanSupporterItemVM dataSource = (ClanSupporterItemVM)(generatedWidgetData.Data = _datasource_Root_Supporters[i]);
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_2_0_0_1.AddChildAtIndex(clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate, i);
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.CreateWidgets();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetIds();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetAttributes();
				clanScreen__TaleWorlds_CampaignSystem_ViewModelCollection_ClanManagement_ClanManagementVM_Dependency_54_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
