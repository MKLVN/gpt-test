using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.Inventory;
using TaleWorlds.Core.ViewModelCollection.Generic;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.ExtraWidgets;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Information;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Inventory;

namespace SandBox.GauntletUI.AutoGenerated1;

public class Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_24_InventoryTooltipInnerContent__DependendPrefab : ListPanel
{
	private ListPanel _widget;

	private Widget _widget_0;

	private ListPanel _widget_1;

	private RadioContainerWidget _widget_2;

	private InventoryAlternativeUsageContainer _widget_2_0;

	private PropertyBasedTooltipWidget _widget_3;

	private ListPanel _widget_3_0;

	private ItemMenuVM _datasource_Root;

	private MBBindingList<ItemFlagVM> _datasource_Root_TargetItemFlagList;

	private MBBindingList<StringItemWithHintVM> _datasource_Root_AlternativeUsages;

	private MBBindingList<ItemMenuTooltipPropertyVM> _datasource_Root_TargetItemProperties;

	public Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_24_InventoryTooltipInnerContent__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new ListPanel(base.Context);
		_widget.AddChild(_widget_1);
		_widget_2 = new RadioContainerWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new InventoryAlternativeUsageContainer(base.Context);
		_widget_2.AddChild(_widget_2_0);
		_widget_3 = new PropertyBasedTooltipWidget(base.Context);
		_widget.AddChild(_widget_3);
		_widget_3_0 = new ListPanel(base.Context);
		_widget_3.AddChild(_widget_3_0);
	}

	public void SetIds()
	{
		_widget_2_0.Id = "List";
		_widget_3_0.Id = "MyInnerPanel";
	}

	public void SetAttributes()
	{
		base.DoNotAcceptEvents = true;
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.HorizontalAlignment = HorizontalAlignment.Center;
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 156f;
		_widget_1.DoNotAcceptEvents = true;
		_widget_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_2.DoNotAcceptEvents = true;
		_widget_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2.MarginLeft = 20f;
		_widget_2.MarginRight = 20f;
		_widget_2.Container = _widget_2_0;
		_widget_2.IsHidden = false;
		_widget_2_0.DoNotAcceptEvents = true;
		_widget_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_2_0.CellHeight = 29.75f;
		_widget_2_0.CellWidth = 124.95f;
		_widget_2_0.ColumnLimit = 2;
		_widget_3.DoNotAcceptEvents = true;
		_widget_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_3.MarginLeft = 20f;
		_widget_3.MarginRight = 20f;
		_widget_3.MarginBottom = 20f;
		_widget_3.PropertyList = _widget_3_0;
		_widget_3.IsVisible = true;
		_widget_3.PositioningType = TooltipPositioningType.None;
		_widget_3_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_3_0.HorizontalAlignment = HorizontalAlignment.Left;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
		if (_datasource_Root_TargetItemFlagList != null)
		{
			_datasource_Root_TargetItemFlagList.ListChanged -= OnList_datasource_Root_TargetItemFlagListChanged;
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)_widget_1.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_TargetItemFlagList = null;
		}
		if (_datasource_Root_AlternativeUsages != null)
		{
			_datasource_Root_AlternativeUsages.ListChanged -= OnList_datasource_Root_AlternativeUsagesChanged;
			for (int num2 = _widget_2_0.ChildCount - 1; num2 >= 0; num2--)
			{
				Widget child2 = _widget_2_0.GetChild(num2);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child2).OnBeforeRemovedChild(child2);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)_widget_2_0.GetChild(num2)).DestroyDataSource();
			}
			_datasource_Root_AlternativeUsages = null;
		}
		if (_datasource_Root_TargetItemProperties != null)
		{
			_datasource_Root_TargetItemProperties.ListChanged -= OnList_datasource_Root_TargetItemPropertiesChanged;
			for (int num3 = _widget_3_0.ChildCount - 1; num3 >= 0; num3--)
			{
				Widget child3 = _widget_3_0.GetChild(num3);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)_widget_3_0.GetChild(num3)).DestroyDataSource();
			}
			_datasource_Root_TargetItemProperties = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(ItemMenuVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "SelectedIndex")
		{
			_datasource_Root.AlternativeUsageIndex = _widget_2.SelectedIndex;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "TargetItemFlagList":
			RefreshDataSource_datasource_Root_TargetItemFlagList(_datasource_Root.TargetItemFlagList);
			break;
		case "AlternativeUsages":
			RefreshDataSource_datasource_Root_AlternativeUsages(_datasource_Root.AlternativeUsages);
			break;
		case "TargetItemProperties":
			RefreshDataSource_datasource_Root_TargetItemProperties(_datasource_Root.TargetItemProperties);
			break;
		case "AlternativeUsageIndex":
			_widget_2.SelectedIndex = _datasource_Root.AlternativeUsageIndex;
			break;
		}
	}

	public void OnList_datasource_Root_TargetItemFlagListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child4).SetDataSource(null);
				_widget_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_TargetItemFlagList.Count; i++)
			{
				ItemFlagVM bindingObject = _datasource_Root_TargetItemFlagList[i];
				_widget_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate);
			ItemFlagVM dataSource = (ItemFlagVM)(generatedWidgetData.Data = _datasource_Root_TargetItemFlagList[e.NewIndex]);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate, e.NewIndex);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.CreateWidgets();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetIds();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetAttributes();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child).SetDataSource(null);
			_widget_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_AlternativeUsagesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_2_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_2_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_2_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child4).SetDataSource(null);
				_widget_2_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_AlternativeUsages.Count; i++)
			{
				StringItemWithHintVM bindingObject = _datasource_Root_AlternativeUsages[i];
				_widget_2_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate);
			StringItemWithHintVM dataSource = (StringItemWithHintVM)(generatedWidgetData.Data = _datasource_Root_AlternativeUsages[e.NewIndex]);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_2_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate, e.NewIndex);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.CreateWidgets();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetIds();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetAttributes();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_2_0.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_2_0.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child).SetDataSource(null);
			_widget_2_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_TargetItemPropertiesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_3_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_3_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_3_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child4).SetDataSource(null);
				_widget_3_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_TargetItemProperties.Count; i++)
			{
				ItemMenuTooltipPropertyVM bindingObject = _datasource_Root_TargetItemProperties[i];
				_widget_3_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate);
			ItemMenuTooltipPropertyVM dataSource = (ItemMenuTooltipPropertyVM)(generatedWidgetData.Data = _datasource_Root_TargetItemProperties[e.NewIndex]);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_3_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate, e.NewIndex);
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.CreateWidgets();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetIds();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetAttributes();
			inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_3_0.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_3_0.GetChild(e.NewIndex);
			((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child).SetDataSource(null);
			_widget_3_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(ItemMenuVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			if (_datasource_Root_TargetItemFlagList != null)
			{
				_datasource_Root_TargetItemFlagList.ListChanged -= OnList_datasource_Root_TargetItemFlagListChanged;
				for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1.GetChild(num);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1.GetChild(num);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child2).SetDataSource(null);
					_widget_1.RemoveChild(child2);
				}
				_datasource_Root_TargetItemFlagList = null;
			}
			if (_datasource_Root_AlternativeUsages != null)
			{
				_datasource_Root_AlternativeUsages.ListChanged -= OnList_datasource_Root_AlternativeUsagesChanged;
				for (int num2 = _widget_2_0.ChildCount - 1; num2 >= 0; num2--)
				{
					Widget child3 = _widget_2_0.GetChild(num2);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child3).OnBeforeRemovedChild(child3);
					Widget child4 = _widget_2_0.GetChild(num2);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child4).SetDataSource(null);
					_widget_2_0.RemoveChild(child4);
				}
				_datasource_Root_AlternativeUsages = null;
			}
			if (_datasource_Root_TargetItemProperties != null)
			{
				_datasource_Root_TargetItemProperties.ListChanged -= OnList_datasource_Root_TargetItemPropertiesChanged;
				for (int num3 = _widget_3_0.ChildCount - 1; num3 >= 0; num3--)
				{
					Widget child5 = _widget_3_0.GetChild(num3);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child5).OnBeforeRemovedChild(child5);
					Widget child6 = _widget_3_0.GetChild(num3);
					((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child6).SetDataSource(null);
					_widget_3_0.RemoveChild(child6);
				}
				_datasource_Root_TargetItemProperties = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_2.SelectedIndex = _datasource_Root.AlternativeUsageIndex;
		_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
		_datasource_Root_TargetItemFlagList = _datasource_Root.TargetItemFlagList;
		if (_datasource_Root_TargetItemFlagList != null)
		{
			_datasource_Root_TargetItemFlagList.ListChanged += OnList_datasource_Root_TargetItemFlagListChanged;
			for (int i = 0; i < _datasource_Root_TargetItemFlagList.Count; i++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate);
				ItemFlagVM dataSource = (ItemFlagVM)(generatedWidgetData.Data = _datasource_Root_TargetItemFlagList[i]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate, i);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			}
		}
		_datasource_Root_AlternativeUsages = _datasource_Root.AlternativeUsages;
		if (_datasource_Root_AlternativeUsages != null)
		{
			_datasource_Root_AlternativeUsages.ListChanged += OnList_datasource_Root_AlternativeUsagesChanged;
			for (int j = 0; j < _datasource_Root_AlternativeUsages.Count; j++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate);
				StringItemWithHintVM dataSource2 = (StringItemWithHintVM)(generatedWidgetData2.Data = _datasource_Root_AlternativeUsages[j]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.AddComponent(generatedWidgetData2);
				_widget_2_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate, j);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetDataSource(dataSource2);
			}
		}
		_datasource_Root_TargetItemProperties = _datasource_Root.TargetItemProperties;
		if (_datasource_Root_TargetItemProperties != null)
		{
			_datasource_Root_TargetItemProperties.ListChanged += OnList_datasource_Root_TargetItemPropertiesChanged;
			for (int k = 0; k < _datasource_Root_TargetItemProperties.Count; k++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData3 = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate);
				ItemMenuTooltipPropertyVM dataSource3 = (ItemMenuTooltipPropertyVM)(generatedWidgetData3.Data = _datasource_Root_TargetItemProperties[k]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.AddComponent(generatedWidgetData3);
				_widget_3_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate, k);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetDataSource(dataSource3);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_TargetItemFlagList(MBBindingList<ItemFlagVM> newDataSource)
	{
		if (_datasource_Root_TargetItemFlagList != null)
		{
			_datasource_Root_TargetItemFlagList.ListChanged -= OnList_datasource_Root_TargetItemFlagListChanged;
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate)child2).SetDataSource(null);
				_widget_1.RemoveChild(child2);
			}
			_datasource_Root_TargetItemFlagList = null;
		}
		_datasource_Root_TargetItemFlagList = newDataSource;
		_datasource_Root_TargetItemFlagList = _datasource_Root.TargetItemFlagList;
		if (_datasource_Root_TargetItemFlagList != null)
		{
			_datasource_Root_TargetItemFlagList.ListChanged += OnList_datasource_Root_TargetItemFlagListChanged;
			for (int i = 0; i < _datasource_Root_TargetItemFlagList.Count; i++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate);
				ItemFlagVM dataSource = (ItemFlagVM)(generatedWidgetData.Data = _datasource_Root_TargetItemFlagList[i]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate, i);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_29_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_AlternativeUsages(MBBindingList<StringItemWithHintVM> newDataSource)
	{
		if (_datasource_Root_AlternativeUsages != null)
		{
			_datasource_Root_AlternativeUsages.ListChanged -= OnList_datasource_Root_AlternativeUsagesChanged;
			for (int num = _widget_2_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_2_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_2_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate)child2).SetDataSource(null);
				_widget_2_0.RemoveChild(child2);
			}
			_datasource_Root_AlternativeUsages = null;
		}
		_datasource_Root_AlternativeUsages = newDataSource;
		_datasource_Root_AlternativeUsages = _datasource_Root.AlternativeUsages;
		if (_datasource_Root_AlternativeUsages != null)
		{
			_datasource_Root_AlternativeUsages.ListChanged += OnList_datasource_Root_AlternativeUsagesChanged;
			for (int i = 0; i < _datasource_Root_AlternativeUsages.Count; i++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate);
				StringItemWithHintVM dataSource = (StringItemWithHintVM)(generatedWidgetData.Data = _datasource_Root_AlternativeUsages[i]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_2_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate, i);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_30_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_TargetItemProperties(MBBindingList<ItemMenuTooltipPropertyVM> newDataSource)
	{
		if (_datasource_Root_TargetItemProperties != null)
		{
			_datasource_Root_TargetItemProperties.ListChanged -= OnList_datasource_Root_TargetItemPropertiesChanged;
			for (int num = _widget_3_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_3_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_3_0.GetChild(num);
				((Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate)child2).SetDataSource(null);
				_widget_3_0.RemoveChild(child2);
			}
			_datasource_Root_TargetItemProperties = null;
		}
		_datasource_Root_TargetItemProperties = newDataSource;
		_datasource_Root_TargetItemProperties = _datasource_Root.TargetItemProperties;
		if (_datasource_Root_TargetItemProperties != null)
		{
			_datasource_Root_TargetItemProperties.ListChanged += OnList_datasource_Root_TargetItemPropertiesChanged;
			for (int i = 0; i < _datasource_Root_TargetItemProperties.Count; i++)
			{
				Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate = new Inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate);
				ItemMenuTooltipPropertyVM dataSource = (ItemMenuTooltipPropertyVM)(generatedWidgetData.Data = _datasource_Root_TargetItemProperties[i]);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_3_0.AddChildAtIndex(inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate, i);
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.CreateWidgets();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetIds();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetAttributes();
				inventory__TaleWorlds_CampaignSystem_ViewModelCollection_Inventory_SPInventoryVM_Dependency_31_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
