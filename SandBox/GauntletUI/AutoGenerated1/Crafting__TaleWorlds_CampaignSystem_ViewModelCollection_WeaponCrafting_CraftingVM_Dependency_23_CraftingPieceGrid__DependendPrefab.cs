using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.Inventory;
using TaleWorlds.CampaignSystem.ViewModelCollection.WeaponCrafting.WeaponDesign;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;

namespace SandBox.GauntletUI.AutoGenerated1;

public class Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_23_CraftingPieceGrid__DependendPrefab : Widget
{
	private Widget _widget;

	private ListPanel _widget_0;

	private ListPanel _widget_0_0;

	private ScrollablePanel _widget_0_0_0;

	private NavigationScopeTargeter _widget_0_0_0_0;

	private Widget _widget_0_0_0_1;

	private NavigatableGridWidget _widget_0_0_0_1_0;

	private Widget _widget_0_0_0_2;

	private Widget _widget_0_0_0_3;

	private ScrollbarWidget _widget_0_0_1;

	private Widget _widget_0_0_1_0;

	private ImageWidget _widget_0_0_1_1;

	private Widget _widget_0_1;

	private ListPanel _widget_0_2;

	private NavigationScopeTargeter _widget_0_3;

	private ListPanel _widget_0_4;

	private TextWidget _widget_0_4_0;

	private SliderWidget _widget_0_4_1;

	private Widget _widget_0_4_1_0;

	private Widget _widget_0_4_1_1;

	private Widget _widget_0_4_1_1_0;

	private Widget _widget_0_4_1_2;

	private ImageWidget _widget_0_4_1_3;

	private WeaponDesignVM _datasource_Root;

	private CraftingPieceListVM _datasource_Root_PommelPieceList;

	private MBBindingList<CraftingPieceVM> _datasource_Root_PommelPieceList_Pieces;

	private MBBindingList<ItemFlagVM> _datasource_Root_WeaponFlagIconsList;

	public Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_23_CraftingPieceGrid__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new ListPanel(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new ScrollablePanel(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_0_0 = new NavigationScopeTargeter(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_0);
		_widget_0_0_0_1 = new Widget(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_1);
		_widget_0_0_0_1_0 = new NavigatableGridWidget(base.Context);
		_widget_0_0_0_1.AddChild(_widget_0_0_0_1_0);
		_widget_0_0_0_2 = new Widget(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_2);
		_widget_0_0_0_3 = new Widget(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_3);
		_widget_0_0_1 = new ScrollbarWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_1_0 = new Widget(base.Context);
		_widget_0_0_1.AddChild(_widget_0_0_1_0);
		_widget_0_0_1_1 = new ImageWidget(base.Context);
		_widget_0_0_1.AddChild(_widget_0_0_1_1);
		_widget_0_1 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_2 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_2);
		_widget_0_3 = new NavigationScopeTargeter(base.Context);
		_widget_0.AddChild(_widget_0_3);
		_widget_0_4 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_4);
		_widget_0_4_0 = new TextWidget(base.Context);
		_widget_0_4.AddChild(_widget_0_4_0);
		_widget_0_4_1 = new SliderWidget(base.Context);
		_widget_0_4.AddChild(_widget_0_4_1);
		_widget_0_4_1_0 = new Widget(base.Context);
		_widget_0_4_1.AddChild(_widget_0_4_1_0);
		_widget_0_4_1_1 = new Widget(base.Context);
		_widget_0_4_1.AddChild(_widget_0_4_1_1);
		_widget_0_4_1_1_0 = new Widget(base.Context);
		_widget_0_4_1_1.AddChild(_widget_0_4_1_1_0);
		_widget_0_4_1_2 = new Widget(base.Context);
		_widget_0_4_1.AddChild(_widget_0_4_1_2);
		_widget_0_4_1_3 = new ImageWidget(base.Context);
		_widget_0_4_1.AddChild(_widget_0_4_1_3);
	}

	public void SetIds()
	{
		_widget_0.Id = "Layout1";
		_widget_0_0.Id = "Layout2";
		_widget_0_0_0.Id = "ScrollablePanel";
		_widget_0_0_0_1.Id = "ClipRect";
		_widget_0_0_0_1_0.Id = "GridWidget";
		_widget_0_0_1.Id = "VerticalScrollbar";
		_widget_0_0_1_1.Id = "VerticalScrollbarHandle";
		_widget_0_4.Id = "SizeSlider";
		_widget_0_4_1_1.Id = "Filler";
		_widget_0_4_1_3.Id = "SliderHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_0.AutoHideScrollBars = true;
		_widget_0_0_0.ClipRect = _widget_0_0_0_1;
		_widget_0_0_0.InnerPanel = _widget_0_0_0_1_0;
		_widget_0_0_0.VerticalScrollbar = _widget_0_0_1;
		_widget_0_0_0_0.ScopeID = "PieceGridScope";
		_widget_0_0_0_0.ScopeParent = _widget_0_0_0_1;
		_widget_0_0_0_0.ScopeMovements = GamepadNavigationTypes.Horizontal;
		_widget_0_0_0_0.AlternateScopeMovements = GamepadNavigationTypes.Vertical;
		_widget_0_0_0_0.AlternateMovementStepSize = 4;
		_widget_0_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_1.ClipContents = true;
		_widget_0_0_0_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_0_1_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_0_1_0.ColumnCount = 4;
		_widget_0_0_0_1_0.DefaultCellHeight = 100f;
		_widget_0_0_0_1_0.DefaultCellWidth = 140f;
		_widget_0_0_0_2.DoNotAcceptEvents = true;
		_widget_0_0_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_2.SuggestedWidth = 580f;
		_widget_0_0_0_2.SuggestedHeight = 57f;
		_widget_0_0_0_2.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_0_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_0_0_2.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\character_creation_scroll_gradient");
		_widget_0_0_0_2.AlphaFactor = 0.75f;
		_widget_0_0_0_3.DoNotAcceptEvents = true;
		_widget_0_0_0_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_3.SuggestedWidth = 580f;
		_widget_0_0_0_3.SuggestedHeight = 57f;
		_widget_0_0_0_3.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_0_3.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_0_3.VerticalFlip = true;
		_widget_0_0_0_3.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\character_creation_scroll_gradient");
		_widget_0_0_0_3.AlphaFactor = 0.75f;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.SuggestedWidth = 8f;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_1.MarginTop = 0f;
		_widget_0_0_1.MarginBottom = 0f;
		_widget_0_0_1.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_0_0_1.Handle = _widget_0_0_1_1;
		_widget_0_0_1.MaxValue = 100f;
		_widget_0_0_1.MinValue = 0f;
		_widget_0_0_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1_0.SuggestedWidth = 4f;
		_widget_0_0_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_0_0_1_0.AlphaFactor = 0.2f;
		_widget_0_0_1_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_0_0_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1_1.SuggestedWidth = 8f;
		_widget_0_0_1_1.SuggestedHeight = 10f;
		_widget_0_0_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
		_widget_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_1.SuggestedHeight = 8f;
		_widget_0_1.MarginBottom = 7f;
		_widget_0_1.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\stone_divider_thin");
		_widget_0_1.ExtendBottom = 22f;
		_widget_0_1.ExtendLeft = 2f;
		_widget_0_1.ExtendRight = 3f;
		_widget_0_1.ExtendTop = 22f;
		_widget_0_1.PositionXOffset = -6f;
		_widget_0_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2.SuggestedHeight = 38f;
		_widget_0_2.MarginLeft = 10f;
		_widget_0_2.MarginRight = 10f;
		_widget_0_2.StackLayout.LayoutMethod = LayoutMethod.HorizontalCentered;
		_widget_0_3.ScopeID = "SizeSliderScope";
		_widget_0_3.ScopeParent = _widget_0_4;
		_widget_0_3.ScopeMovements = GamepadNavigationTypes.Horizontal;
		_widget_0_4.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_4.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4.SuggestedHeight = 50f;
		_widget_0_4.MarginRight = 100f;
		_widget_0_4.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_4.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_4.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_4_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_4_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_4_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_4_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_0.MarginRight = 30f;
		_widget_0_4_0.Brush = base.Context.GetBrush("Crafting.Size.Slider.Label");
		_widget_0_4_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1.SuggestedWidth = 338f;
		_widget_0_4_1.SuggestedHeight = 42f;
		_widget_0_4_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_4_1.Filler = _widget_0_4_1_1;
		_widget_0_4_1.Handle = _widget_0_4_1_3;
		_widget_0_4_1.MaxValueInt = 10;
		_widget_0_4_1.MinValueInt = -10;
		_widget_0_4_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_0.SuggestedWidth = 362f;
		_widget_0_4_1_0.SuggestedHeight = 38f;
		_widget_0_4_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_4_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1_0.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_canvas");
		_widget_0_4_1_0.IsEnabled = false;
		_widget_0_4_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_1.SuggestedWidth = 345f;
		_widget_0_4_1_1.SuggestedHeight = 35f;
		_widget_0_4_1_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1_1.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_fill");
		_widget_0_4_1_1.ClipContents = true;
		_widget_0_4_1_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_1_0.SuggestedWidth = 345f;
		_widget_0_4_1_1_0.SuggestedHeight = 35f;
		_widget_0_4_1_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_4_1_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1_1_0.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_fill");
		_widget_0_4_1_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_2.SuggestedWidth = 400f;
		_widget_0_4_1_2.SuggestedHeight = 65f;
		_widget_0_4_1_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_4_1_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1_2.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_frame");
		_widget_0_4_1_2.IsEnabled = false;
		_widget_0_4_1_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_4_1_3.SuggestedWidth = 14f;
		_widget_0_4_1_3.SuggestedHeight = 38f;
		_widget_0_4_1_3.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_4_1_3.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_4_1_3.Brush = base.Context.GetBrush("SPOptions.Slider.Handle");
		_widget_0_4_1_3.DoNotAcceptEvents = true;
		_widget_0_4_1_3.GamepadNavigationIndex = 0;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0_4_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_4_1;
		if (_datasource_Root_PommelPieceList != null)
		{
			_datasource_Root_PommelPieceList.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList;
			if (_datasource_Root_PommelPieceList_Pieces != null)
			{
				_datasource_Root_PommelPieceList_Pieces.ListChanged -= OnList_datasource_Root_PommelPieceList_PiecesChanged;
				for (int num = _widget_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_0_1_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child).OnBeforeRemovedChild(child);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)_widget_0_0_0_1_0.GetChild(num)).DestroyDataSource();
				}
				_datasource_Root_PommelPieceList_Pieces = null;
			}
			_datasource_Root_PommelPieceList = null;
		}
		if (_datasource_Root_WeaponFlagIconsList != null)
		{
			_datasource_Root_WeaponFlagIconsList.ListChanged -= OnList_datasource_Root_WeaponFlagIconsListChanged;
			for (int num2 = _widget_0_2.ChildCount - 1; num2 >= 0; num2--)
			{
				Widget child2 = _widget_0_2.GetChild(num2);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child2).OnBeforeRemovedChild(child2);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)_widget_0_2.GetChild(num2)).DestroyDataSource();
			}
			_datasource_Root_WeaponFlagIconsList = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(WeaponDesignVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_4_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_4_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.ComponentSizeLbl = _widget_0_4_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_4_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_4_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_4_1(string propertyName)
	{
		if (propertyName == "ValueInt")
		{
			_datasource_Root.PommelSize = _widget_0_4_1.ValueInt;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "PommelPieceList":
			RefreshDataSource_datasource_Root_PommelPieceList(_datasource_Root.PommelPieceList);
			break;
		case "WeaponFlagIconsList":
			RefreshDataSource_datasource_Root_WeaponFlagIconsList(_datasource_Root.WeaponFlagIconsList);
			break;
		case "ComponentSizeLbl":
			_widget_0_4_0.Text = _datasource_Root.ComponentSizeLbl;
			break;
		case "PommelSize":
			_widget_0_4_1.ValueInt = _datasource_Root.PommelSize;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_PommelPieceList(string propertyName)
	{
		if (propertyName == "Pieces")
		{
			RefreshDataSource_datasource_Root_PommelPieceList_Pieces(_datasource_Root_PommelPieceList.Pieces);
		}
	}

	public void OnList_datasource_Root_PommelPieceList_PiecesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_0_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_0_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child4).SetDataSource(null);
				_widget_0_0_0_1_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_PommelPieceList_Pieces.Count; i++)
			{
				CraftingPieceVM bindingObject = _datasource_Root_PommelPieceList_Pieces[i];
				_widget_0_0_0_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate);
			CraftingPieceVM dataSource = (CraftingPieceVM)(generatedWidgetData.Data = _datasource_Root_PommelPieceList_Pieces[e.NewIndex]);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_0_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate, e.NewIndex);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.CreateWidgets();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetIds();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetAttributes();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_0_0_1_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_0_0_1_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child).SetDataSource(null);
			_widget_0_0_0_1_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_WeaponFlagIconsListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_2.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_2.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_2.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child4).SetDataSource(null);
				_widget_0_2.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_WeaponFlagIconsList.Count; i++)
			{
				ItemFlagVM bindingObject = _datasource_Root_WeaponFlagIconsList[i];
				_widget_0_2.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate);
			ItemFlagVM dataSource = (ItemFlagVM)(generatedWidgetData.Data = _datasource_Root_WeaponFlagIconsList[e.NewIndex]);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_2.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate, e.NewIndex);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.CreateWidgets();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetIds();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetAttributes();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_2.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_2.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child).SetDataSource(null);
			_widget_0_2.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(WeaponDesignVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_0_4_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_4_0;
			_widget_0_4_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_4_1;
			_widget_0_4_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_4_1;
			if (_datasource_Root_PommelPieceList != null)
			{
				_datasource_Root_PommelPieceList.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList;
				_datasource_Root_PommelPieceList.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList;
				if (_datasource_Root_PommelPieceList_Pieces != null)
				{
					_datasource_Root_PommelPieceList_Pieces.ListChanged -= OnList_datasource_Root_PommelPieceList_PiecesChanged;
					for (int num = _widget_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
					{
						Widget child = _widget_0_0_0_1_0.GetChild(num);
						((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child).OnBeforeRemovedChild(child);
						Widget child2 = _widget_0_0_0_1_0.GetChild(num);
						((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child2).SetDataSource(null);
						_widget_0_0_0_1_0.RemoveChild(child2);
					}
					_datasource_Root_PommelPieceList_Pieces = null;
				}
				_datasource_Root_PommelPieceList = null;
			}
			if (_datasource_Root_WeaponFlagIconsList != null)
			{
				_datasource_Root_WeaponFlagIconsList.ListChanged -= OnList_datasource_Root_WeaponFlagIconsListChanged;
				for (int num2 = _widget_0_2.ChildCount - 1; num2 >= 0; num2--)
				{
					Widget child3 = _widget_0_2.GetChild(num2);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child3).OnBeforeRemovedChild(child3);
					Widget child4 = _widget_0_2.GetChild(num2);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child4).SetDataSource(null);
					_widget_0_2.RemoveChild(child4);
				}
				_datasource_Root_WeaponFlagIconsList = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0_4_0.Text = _datasource_Root.ComponentSizeLbl;
		_widget_0_4_0.PropertyChanged += PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_4_0;
		_widget_0_4_1.ValueInt = _datasource_Root.PommelSize;
		_widget_0_4_1.PropertyChanged += PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_4_1;
		_widget_0_4_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_4_1;
		_datasource_Root_PommelPieceList = _datasource_Root.PommelPieceList;
		if (_datasource_Root_PommelPieceList != null)
		{
			_datasource_Root_PommelPieceList.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList_Pieces = _datasource_Root_PommelPieceList.Pieces;
			if (_datasource_Root_PommelPieceList_Pieces != null)
			{
				_datasource_Root_PommelPieceList_Pieces.ListChanged += OnList_datasource_Root_PommelPieceList_PiecesChanged;
				for (int i = 0; i < _datasource_Root_PommelPieceList_Pieces.Count; i++)
				{
					Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate);
					CraftingPieceVM dataSource = (CraftingPieceVM)(generatedWidgetData.Data = _datasource_Root_PommelPieceList_Pieces[i]);
					crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.AddComponent(generatedWidgetData);
					_widget_0_0_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate, i);
					crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.CreateWidgets();
					crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetIds();
					crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetAttributes();
					crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetDataSource(dataSource);
				}
			}
		}
		_datasource_Root_WeaponFlagIconsList = _datasource_Root.WeaponFlagIconsList;
		if (_datasource_Root_WeaponFlagIconsList != null)
		{
			_datasource_Root_WeaponFlagIconsList.ListChanged += OnList_datasource_Root_WeaponFlagIconsListChanged;
			for (int j = 0; j < _datasource_Root_WeaponFlagIconsList.Count; j++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate);
				ItemFlagVM dataSource2 = (ItemFlagVM)(generatedWidgetData2.Data = _datasource_Root_WeaponFlagIconsList[j]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.AddComponent(generatedWidgetData2);
				_widget_0_2.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate, j);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetDataSource(dataSource2);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PommelPieceList(CraftingPieceListVM newDataSource)
	{
		if (_datasource_Root_PommelPieceList != null)
		{
			_datasource_Root_PommelPieceList.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList;
			_datasource_Root_PommelPieceList.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList;
			if (_datasource_Root_PommelPieceList_Pieces != null)
			{
				_datasource_Root_PommelPieceList_Pieces.ListChanged -= OnList_datasource_Root_PommelPieceList_PiecesChanged;
				for (int num = _widget_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_0_1_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_0_0_1_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child2).SetDataSource(null);
					_widget_0_0_0_1_0.RemoveChild(child2);
				}
				_datasource_Root_PommelPieceList_Pieces = null;
			}
			_datasource_Root_PommelPieceList = null;
		}
		_datasource_Root_PommelPieceList = newDataSource;
		_datasource_Root_PommelPieceList = _datasource_Root.PommelPieceList;
		if (_datasource_Root_PommelPieceList == null)
		{
			return;
		}
		_datasource_Root_PommelPieceList.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PommelPieceList;
		_datasource_Root_PommelPieceList_Pieces = _datasource_Root_PommelPieceList.Pieces;
		if (_datasource_Root_PommelPieceList_Pieces != null)
		{
			_datasource_Root_PommelPieceList_Pieces.ListChanged += OnList_datasource_Root_PommelPieceList_PiecesChanged;
			for (int i = 0; i < _datasource_Root_PommelPieceList_Pieces.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate);
				CraftingPieceVM dataSource = (CraftingPieceVM)(generatedWidgetData.Data = _datasource_Root_PommelPieceList_Pieces[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PommelPieceList_Pieces(MBBindingList<CraftingPieceVM> newDataSource)
	{
		if (_datasource_Root_PommelPieceList_Pieces != null)
		{
			_datasource_Root_PommelPieceList_Pieces.ListChanged -= OnList_datasource_Root_PommelPieceList_PiecesChanged;
			for (int num = _widget_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_0_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate)child2).SetDataSource(null);
				_widget_0_0_0_1_0.RemoveChild(child2);
			}
			_datasource_Root_PommelPieceList_Pieces = null;
		}
		_datasource_Root_PommelPieceList_Pieces = newDataSource;
		_datasource_Root_PommelPieceList_Pieces = _datasource_Root_PommelPieceList.Pieces;
		if (_datasource_Root_PommelPieceList_Pieces != null)
		{
			_datasource_Root_PommelPieceList_Pieces.ListChanged += OnList_datasource_Root_PommelPieceList_PiecesChanged;
			for (int i = 0; i < _datasource_Root_PommelPieceList_Pieces.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate);
				CraftingPieceVM dataSource = (CraftingPieceVM)(generatedWidgetData.Data = _datasource_Root_PommelPieceList_Pieces[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_39_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_WeaponFlagIconsList(MBBindingList<ItemFlagVM> newDataSource)
	{
		if (_datasource_Root_WeaponFlagIconsList != null)
		{
			_datasource_Root_WeaponFlagIconsList.ListChanged -= OnList_datasource_Root_WeaponFlagIconsListChanged;
			for (int num = _widget_0_2.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_2.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_2.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate)child2).SetDataSource(null);
				_widget_0_2.RemoveChild(child2);
			}
			_datasource_Root_WeaponFlagIconsList = null;
		}
		_datasource_Root_WeaponFlagIconsList = newDataSource;
		_datasource_Root_WeaponFlagIconsList = _datasource_Root.WeaponFlagIconsList;
		if (_datasource_Root_WeaponFlagIconsList != null)
		{
			_datasource_Root_WeaponFlagIconsList.ListChanged += OnList_datasource_Root_WeaponFlagIconsListChanged;
			for (int i = 0; i < _datasource_Root_WeaponFlagIconsList.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate);
				ItemFlagVM dataSource = (ItemFlagVM)(generatedWidgetData.Data = _datasource_Root_WeaponFlagIconsList[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_2.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_40_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
