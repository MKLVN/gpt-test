using System.ComponentModel;
using System.Numerics;
using SandBox.ViewModelCollection.MapSiege;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Map.Siege;

namespace SandBox.GauntletUI.AutoGenerated1;

public class MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate : MapSiegePOIBrushWidget
{
	private MapSiegePOIBrushWidget _widget;

	private Widget _widget_0;

	private SliderWidget _widget_0_0;

	private BrushWidget _widget_0_0_0;

	private BrushWidget _widget_0_0_1;

	private Widget _widget_1;

	private Widget _widget_1_0;

	private Widget _widget_1_0_0;

	private BrushWidget _widget_2;

	private MapSiegeQueueIndexTextWidget _widget_2_0;

	private MapSiegePOIVM _datasource_Root;

	public MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new SliderWidget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new BrushWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new BrushWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_1 = new Widget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new Widget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_0_0 = new Widget(base.Context);
		_widget_1_0.AddChild(_widget_1_0_0);
		_widget_2 = new BrushWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new MapSiegeQueueIndexTextWidget(base.Context);
		_widget_2.AddChild(_widget_2_0);
	}

	public void SetIds()
	{
		_widget_0.Id = "SliderParent";
		_widget_0_0.Id = "Slider";
		_widget_0_0_0.Id = "Filler";
		_widget_0_0_1.Id = "Handle";
		_widget_1.Id = "MachineCircle";
		_widget_1_0.Id = "MachineIconParent";
		_widget_1_0_0.Id = "MachineTypeIconWidget";
		_widget_2.Id = "HammerAnimWidget";
	}

	public void SetAttributes()
	{
		base.DoNotPassEventsToChildren = true;
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.ConstructionBrush = base.Context.GetBrush("MapSiege.Machine.Construction.Brush");
		base.ConstructionControllerWidget = _widget.FindChild(new BindingPath("..\\..\\ConstructionControllerWidget")) as MapSiegeConstructionControllerWidget;
		base.HammerAnimWidget = _widget_2;
		base.MachineTypeIconWidget = _widget_1_0_0;
		base.NormalBrush = base.Context.GetBrush("MapSiege.Machine.Normal.Brush");
		base.Slider = _widget_0_0;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 76f;
		_widget_0.SuggestedHeight = 13f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare");
		_widget_0.Color = new Color(0.1529412f, 0.1490196f, 0.1411765f);
		_widget_0.IsEnabled = false;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedWidth = 70f;
		_widget_0_0.SuggestedHeight = 9f;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0.Filler = _widget_0_0_0;
		_widget_0_0.Handle = _widget_0_0_1;
		_widget_0_0.MinValueFloat = 0f;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.SuggestedWidth = 11f;
		_widget_0_0_0.SuggestedHeight = 9f;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.SuggestedWidth = 1f;
		_widget_0_0_1.SuggestedHeight = 1f;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_1.IsEnabled = false;
		_widget_0_0_1.IsVisible = false;
		_widget_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1.SuggestedWidth = 35f;
		_widget_1.SuggestedHeight = 35f;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1.PositionYOffset = 9f;
		_widget_1.MarginRight = 72f;
		_widget_1.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteCircle");
		_widget_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_0.SuggestedWidth = 33f;
		_widget_1_0.SuggestedHeight = 33f;
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteCircle");
		_widget_1_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_0_0.SuggestedWidth = 27f;
		_widget_1_0_0.SuggestedHeight = 20.7f;
		_widget_1_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_2.SuggestedWidth = 35f;
		_widget_2.SuggestedHeight = 35f;
		_widget_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_2.PositionXOffset = -10f;
		_widget_2.PositionYOffset = -5f;
		_widget_2.Brush = base.Context.GetBrush("MapSiege.Construction.HammerWithAnimation");
		_widget_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_2_0.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_2_0.Brush.FontSize = 20;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_1_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0_0;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
			_datasource_Root = null;
		}
	}

	public void SetDataSource(MapSiegePOIVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget(Widget widget, string commandName, object[] args)
	{
		if (commandName == "HideTooltip")
		{
			_datasource_Root.ExecuteHideTooltip();
		}
		if (commandName == "OnSelection")
		{
			_datasource_Root.ExecuteSelection();
		}
		if (commandName == "ShowTooltip")
		{
			_datasource_Root.ExecuteShowTooltip();
		}
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		switch (propertyName)
		{
		case "IsConstructing":
			_datasource_Root.IsConstructing = _widget.IsConstructing;
			break;
		case "IsPlayerSidePOI":
			_datasource_Root.IsPlayerSidePOI = _widget.IsPlayerSidePOI;
			break;
		case "IsVisible":
			_datasource_Root.HasItem = _widget.IsVisible;
			break;
		case "MachineType":
			_datasource_Root.MachineType = _widget.MachineType;
			break;
		case "ScreenPosition":
			_datasource_Root.Position = _widget.ScreenPosition;
			break;
		case "IsInVisibleRange":
			_datasource_Root.IsInVisibleRange = _widget.IsInVisibleRange;
			break;
		case "IsPOISelected":
			_datasource_Root.IsSelected = _widget.IsPOISelected;
			break;
		case "QueueIndex":
			_datasource_Root.QueueIndex = _widget.QueueIndex;
			break;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0(string propertyName)
	{
		if (propertyName == "MaxValueFloat")
		{
			_datasource_Root.MaxHitpoints = _widget_0_0.MaxValueFloat;
		}
		else if (propertyName == "ValueFloat")
		{
			_datasource_Root.CurrentHitpoints = _widget_0_0.ValueFloat;
		}
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "Color")
		{
			_datasource_Root.SideSecondaryColor = _widget_1.Color;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0(string propertyName)
	{
		if (propertyName == "Color")
		{
			_datasource_Root.SidePrimaryColor = _widget_1_0.Color;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0_0(string propertyName)
	{
		if (propertyName == "Color")
		{
			_datasource_Root.SideSecondaryColor = _widget_1_0_0.Color;
		}
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsConstructing = _widget_2.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2_0(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.QueueIndex = _widget_2_0.IntText;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "IsConstructing":
			_widget.IsConstructing = _datasource_Root.IsConstructing;
			_widget_2.IsVisible = _datasource_Root.IsConstructing;
			break;
		case "IsPlayerSidePOI":
			_widget.IsPlayerSidePOI = _datasource_Root.IsPlayerSidePOI;
			break;
		case "HasItem":
			_widget.IsVisible = _datasource_Root.HasItem;
			break;
		case "MachineType":
			_widget.MachineType = _datasource_Root.MachineType;
			break;
		case "Position":
			_widget.ScreenPosition = _datasource_Root.Position;
			break;
		case "IsInVisibleRange":
			_widget.IsInVisibleRange = _datasource_Root.IsInVisibleRange;
			break;
		case "IsSelected":
			_widget.IsPOISelected = _datasource_Root.IsSelected;
			break;
		case "QueueIndex":
			_widget.QueueIndex = _datasource_Root.QueueIndex;
			_widget_2_0.IntText = _datasource_Root.QueueIndex;
			break;
		case "MaxHitpoints":
			_widget_0_0.MaxValueFloat = _datasource_Root.MaxHitpoints;
			break;
		case "CurrentHitpoints":
			_widget_0_0.ValueFloat = _datasource_Root.CurrentHitpoints;
			break;
		case "SideSecondaryColor":
			_widget_1.Color = _datasource_Root.SideSecondaryColor;
			_widget_1_0_0.Color = _datasource_Root.SideSecondaryColor;
			break;
		case "SidePrimaryColor":
			_widget_1_0.Color = _datasource_Root.SidePrimaryColor;
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MapSiegePOIVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_1_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0_0;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.IsConstructing = _datasource_Root.IsConstructing;
			_widget.IsPlayerSidePOI = _datasource_Root.IsPlayerSidePOI;
			_widget.IsVisible = _datasource_Root.HasItem;
			_widget.MachineType = _datasource_Root.MachineType;
			_widget.ScreenPosition = _datasource_Root.Position;
			_widget.IsInVisibleRange = _datasource_Root.IsInVisibleRange;
			_widget.IsPOISelected = _datasource_Root.IsSelected;
			_widget.QueueIndex = _datasource_Root.QueueIndex;
			_widget.EventFire += EventListenerOf_widget;
			_widget.PropertyChanged += PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
			_widget_0_0.MaxValueFloat = _datasource_Root.MaxHitpoints;
			_widget_0_0.ValueFloat = _datasource_Root.CurrentHitpoints;
			_widget_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0;
			_widget_1.Color = _datasource_Root.SideSecondaryColor;
			_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.Color = _datasource_Root.SidePrimaryColor;
			_widget_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0;
			_widget_1_0_0.Color = _datasource_Root.SideSecondaryColor;
			_widget_1_0_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0_0;
			_widget_1_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0_0;
			_widget_2.IsVisible = _datasource_Root.IsConstructing;
			_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.IntText = _datasource_Root.QueueIndex;
			_widget_2_0.PropertyChanged += PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2_0;
		}
	}
}
