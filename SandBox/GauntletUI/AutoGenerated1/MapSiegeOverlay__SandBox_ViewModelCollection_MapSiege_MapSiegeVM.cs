using System.ComponentModel;
using System.Numerics;
using SandBox.ViewModelCollection.MapSiege;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Map.Siege;

namespace SandBox.GauntletUI.AutoGenerated1;

public class MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM : Widget, IGeneratedGauntletMovieRoot
{
	private Widget _widget;

	private Widget _widget_0;

	private ListPanel _widget_1;

	private TextWidget _widget_1_0;

	private SliderWidget _widget_1_1;

	private Widget _widget_1_1_0;

	private Widget _widget_1_1_1;

	private Widget _widget_1_1_1_0;

	private Widget _widget_1_1_2;

	private Widget _widget_1_1_3;

	private MapSiegeConstructionControllerWidget _widget_2;

	private ListPanel _widget_2_0;

	private MapSiegeVM _datasource_Root;

	private MBBindingList<MapSiegePOIVM> _datasource_Root_PointsOfInterest;

	private MapSiegeProductionVM _datasource_Root_ProductionController;

	private MBBindingList<MapSiegeProductionMachineVM> _datasource_Root_ProductionController_PossibleProductionMachines;

	public MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new ListPanel(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new TextWidget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_1 = new SliderWidget(base.Context);
		_widget_1.AddChild(_widget_1_1);
		_widget_1_1_0 = new Widget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_0);
		_widget_1_1_1 = new Widget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_1);
		_widget_1_1_1_0 = new Widget(base.Context);
		_widget_1_1_1.AddChild(_widget_1_1_1_0);
		_widget_1_1_2 = new Widget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_2);
		_widget_1_1_3 = new Widget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_3);
		_widget_2 = new MapSiegeConstructionControllerWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new ListPanel(base.Context);
		_widget_2.AddChild(_widget_2_0);
	}

	public void SetIds()
	{
		_widget_1_1_1.Id = "Filler";
		_widget_1_1_3.Id = "SliderHandle";
		_widget_2.Id = "ConstructionControllerWidget";
	}

	public void SetAttributes()
	{
		base.DoNotAcceptEvents = true;
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.DoNotAcceptEvents = true;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1.MarginBottom = 200f;
		_widget_1.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.MarginTop = 10f;
		_widget_1_0.ClipContents = false;
		_widget_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1.SuggestedWidth = 338f;
		_widget_1_1.SuggestedHeight = 42f;
		_widget_1_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1.DoNotUpdateHandleSize = true;
		_widget_1_1.Filler = _widget_1_1_1;
		_widget_1_1.Handle = _widget_1_1_3;
		_widget_1_1.MaxValueFloat = 1f;
		_widget_1_1.MinValueFloat = 0f;
		_widget_1_1.MarginBottom = 20f;
		_widget_1_1.MarginTop = 5f;
		_widget_1_1.MarginLeft = 30f;
		_widget_1_1.MarginRight = 30f;
		_widget_1_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_0.SuggestedWidth = 362f;
		_widget_1_1_0.SuggestedHeight = 38f;
		_widget_1_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_0.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_canvas");
		_widget_1_1_0.IsEnabled = false;
		_widget_1_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1.SuggestedWidth = 345f;
		_widget_1_1_1.SuggestedHeight = 35f;
		_widget_1_1_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_1.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_fill");
		_widget_1_1_1.ClipContents = true;
		_widget_1_1_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_0.SuggestedWidth = 345f;
		_widget_1_1_1_0.SuggestedHeight = 35f;
		_widget_1_1_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_1_1_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_1_0.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_fill");
		_widget_1_1_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_2.SuggestedWidth = 400f;
		_widget_1_1_2.SuggestedHeight = 65f;
		_widget_1_1_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_2.Sprite = base.Context.SpriteData.GetSprite("SPGeneral\\SPOptions\\standart_slider_frame");
		_widget_1_1_2.IsEnabled = false;
		_widget_1_1_3.DoNotAcceptEvents = true;
		_widget_1_1_3.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_3.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_3.SuggestedWidth = 14f;
		_widget_1_1_3.SuggestedHeight = 38f;
		_widget_1_1_3.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_1_1_3.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_3.IsVisible = false;
		_widget_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
	}

	public void RefreshBindingWithChildren()
	{
		MapSiegeVM datasource_Root = _datasource_Root;
		SetDataSource(null);
		SetDataSource(datasource_Root);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
		_widget_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1;
		_widget_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1;
		if (_datasource_Root_PointsOfInterest != null)
		{
			_datasource_Root_PointsOfInterest.ListChanged -= OnList_datasource_Root_PointsOfInterestChanged;
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)_widget_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_PointsOfInterest = null;
		}
		if (_datasource_Root_ProductionController != null)
		{
			_datasource_Root_ProductionController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
			{
				_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged -= OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
				for (int num2 = _widget_2_0.ChildCount - 1; num2 >= 0; num2--)
				{
					Widget child2 = _widget_2_0.GetChild(num2);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)_widget_2_0.GetChild(num2)).DestroyDataSource();
				}
				_datasource_Root_ProductionController_PossibleProductionMachines = null;
			}
			_datasource_Root_ProductionController = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(MapSiegeVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "IsHidden")
		{
			_datasource_Root.IsPreparationsCompleted = _widget_1.IsHidden;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.PreparationTitleText = _widget_1_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_1(string propertyName)
	{
		if (propertyName == "ValueFloat")
		{
			_datasource_Root.PreparationProgress = _widget_1_1.ValueFloat;
		}
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root_ProductionController.IsEnabled = _widget_2.IsVisible;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "PointsOfInterest":
			RefreshDataSource_datasource_Root_PointsOfInterest(_datasource_Root.PointsOfInterest);
			break;
		case "ProductionController":
			RefreshDataSource_datasource_Root_ProductionController(_datasource_Root.ProductionController);
			break;
		case "IsPreparationsCompleted":
			_widget_1.IsHidden = _datasource_Root.IsPreparationsCompleted;
			break;
		case "PreparationTitleText":
			_widget_1_0.Text = _datasource_Root.PreparationTitleText;
			break;
		case "PreparationProgress":
			_widget_1_1.ValueFloat = _datasource_Root.PreparationProgress;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_ProductionController(string propertyName)
	{
		if (propertyName == "PossibleProductionMachines")
		{
			RefreshDataSource_datasource_Root_ProductionController_PossibleProductionMachines(_datasource_Root_ProductionController.PossibleProductionMachines);
		}
		else if (propertyName == "IsEnabled")
		{
			_widget_2.IsVisible = _datasource_Root_ProductionController.IsEnabled;
		}
	}

	public void OnList_datasource_Root_PointsOfInterestChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
				_widget_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_PointsOfInterest.Count; i++)
			{
				MapSiegePOIVM bindingObject = _datasource_Root_PointsOfInterest[i];
				_widget_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate);
			MapSiegePOIVM dataSource = (MapSiegePOIVM)(generatedWidgetData.Data = _datasource_Root_PointsOfInterest[e.NewIndex]);
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate, e.NewIndex);
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.CreateWidgets();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetIds();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetAttributes();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0.GetChild(e.NewIndex);
			((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0.GetChild(e.NewIndex);
			((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child).SetDataSource(null);
			_widget_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_2_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_2_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_2_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
				_widget_2_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_ProductionController_PossibleProductionMachines.Count; i++)
			{
				MapSiegeProductionMachineVM bindingObject = _datasource_Root_ProductionController_PossibleProductionMachines[i];
				_widget_2_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate);
			MapSiegeProductionMachineVM dataSource = (MapSiegeProductionMachineVM)(generatedWidgetData.Data = _datasource_Root_ProductionController_PossibleProductionMachines[e.NewIndex]);
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_2_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate, e.NewIndex);
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.CreateWidgets();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetIds();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetAttributes();
			mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_2_0.GetChild(e.NewIndex);
			((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_2_0.GetChild(e.NewIndex);
			((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child).SetDataSource(null);
			_widget_2_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MapSiegeVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_1_1;
			_widget_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1;
			_widget_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1;
			_widget_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1;
			_widget_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1;
			_widget_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1;
			_widget_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1;
			_widget_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1;
			_widget_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1;
			if (_datasource_Root_PointsOfInterest != null)
			{
				_datasource_Root_PointsOfInterest.ListChanged -= OnList_datasource_Root_PointsOfInterestChanged;
				for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0.GetChild(num);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0.GetChild(num);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					_widget_0.RemoveChild(child2);
				}
				_datasource_Root_PointsOfInterest = null;
			}
			if (_datasource_Root_ProductionController != null)
			{
				_datasource_Root_ProductionController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController;
				_datasource_Root_ProductionController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController;
				_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
				_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
				_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
				_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
				_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
				_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
				_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
				_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
				_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
				if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
				{
					_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged -= OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
					for (int num2 = _widget_2_0.ChildCount - 1; num2 >= 0; num2--)
					{
						Widget child3 = _widget_2_0.GetChild(num2);
						((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
						Widget child4 = _widget_2_0.GetChild(num2);
						((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
						_widget_2_0.RemoveChild(child4);
					}
					_datasource_Root_ProductionController_PossibleProductionMachines = null;
				}
				_datasource_Root_ProductionController = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.IsHidden = _datasource_Root.IsPreparationsCompleted;
		_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.Text = _datasource_Root.PreparationTitleText;
		_widget_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0;
		_widget_1_1.ValueFloat = _datasource_Root.PreparationProgress;
		_widget_1_1.PropertyChanged += PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_1;
		_widget_1_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_1;
		_widget_1_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_1;
		_widget_1_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_1;
		_datasource_Root_PointsOfInterest = _datasource_Root.PointsOfInterest;
		if (_datasource_Root_PointsOfInterest != null)
		{
			_datasource_Root_PointsOfInterest.ListChanged += OnList_datasource_Root_PointsOfInterestChanged;
			for (int i = 0; i < _datasource_Root_PointsOfInterest.Count; i++)
			{
				MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate);
				MapSiegePOIVM dataSource = (MapSiegePOIVM)(generatedWidgetData.Data = _datasource_Root_PointsOfInterest[i]);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate, i);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.CreateWidgets();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetIds();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetAttributes();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
		_datasource_Root_ProductionController = _datasource_Root.ProductionController;
		if (_datasource_Root_ProductionController == null)
		{
			return;
		}
		_datasource_Root_ProductionController.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController;
		_widget_2.IsVisible = _datasource_Root_ProductionController.IsEnabled;
		_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
		_datasource_Root_ProductionController_PossibleProductionMachines = _datasource_Root_ProductionController.PossibleProductionMachines;
		if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
		{
			_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged += OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
			for (int j = 0; j < _datasource_Root_ProductionController_PossibleProductionMachines.Count; j++)
			{
				MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate);
				MapSiegeProductionMachineVM dataSource2 = (MapSiegeProductionMachineVM)(generatedWidgetData2.Data = _datasource_Root_ProductionController_PossibleProductionMachines[j]);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData2);
				_widget_2_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate, j);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.CreateWidgets();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetIds();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetAttributes();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetDataSource(dataSource2);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PointsOfInterest(MBBindingList<MapSiegePOIVM> newDataSource)
	{
		if (_datasource_Root_PointsOfInterest != null)
		{
			_datasource_Root_PointsOfInterest.ListChanged -= OnList_datasource_Root_PointsOfInterestChanged;
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
				_widget_0.RemoveChild(child2);
			}
			_datasource_Root_PointsOfInterest = null;
		}
		_datasource_Root_PointsOfInterest = newDataSource;
		_datasource_Root_PointsOfInterest = _datasource_Root.PointsOfInterest;
		if (_datasource_Root_PointsOfInterest != null)
		{
			_datasource_Root_PointsOfInterest.ListChanged += OnList_datasource_Root_PointsOfInterestChanged;
			for (int i = 0; i < _datasource_Root_PointsOfInterest.Count; i++)
			{
				MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate);
				MapSiegePOIVM dataSource = (MapSiegePOIVM)(generatedWidgetData.Data = _datasource_Root_PointsOfInterest[i]);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate, i);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.CreateWidgets();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetIds();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetAttributes();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_ProductionController(MapSiegeProductionVM newDataSource)
	{
		if (_datasource_Root_ProductionController != null)
		{
			_datasource_Root_ProductionController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController;
			_datasource_Root_ProductionController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
			{
				_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged -= OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
				for (int num = _widget_2_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_2_0.GetChild(num);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_2_0.GetChild(num);
					((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
					_widget_2_0.RemoveChild(child2);
				}
				_datasource_Root_ProductionController_PossibleProductionMachines = null;
			}
			_datasource_Root_ProductionController = null;
		}
		_datasource_Root_ProductionController = newDataSource;
		_datasource_Root_ProductionController = _datasource_Root.ProductionController;
		if (_datasource_Root_ProductionController == null)
		{
			return;
		}
		_datasource_Root_ProductionController.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_ProductionController;
		_datasource_Root_ProductionController.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_ProductionController;
		_widget_2.IsVisible = _datasource_Root_ProductionController.IsEnabled;
		_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
		_datasource_Root_ProductionController_PossibleProductionMachines = _datasource_Root_ProductionController.PossibleProductionMachines;
		if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
		{
			_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged += OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
			for (int i = 0; i < _datasource_Root_ProductionController_PossibleProductionMachines.Count; i++)
			{
				MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate);
				MapSiegeProductionMachineVM dataSource = (MapSiegeProductionMachineVM)(generatedWidgetData.Data = _datasource_Root_ProductionController_PossibleProductionMachines[i]);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_2_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate, i);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.CreateWidgets();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetIds();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetAttributes();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_ProductionController_PossibleProductionMachines(MBBindingList<MapSiegeProductionMachineVM> newDataSource)
	{
		if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
		{
			_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged -= OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
			for (int num = _widget_2_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_2_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_2_0.GetChild(num);
				((MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
				_widget_2_0.RemoveChild(child2);
			}
			_datasource_Root_ProductionController_PossibleProductionMachines = null;
		}
		_datasource_Root_ProductionController_PossibleProductionMachines = newDataSource;
		_datasource_Root_ProductionController_PossibleProductionMachines = _datasource_Root_ProductionController.PossibleProductionMachines;
		if (_datasource_Root_ProductionController_PossibleProductionMachines != null)
		{
			_datasource_Root_ProductionController_PossibleProductionMachines.ListChanged += OnList_datasource_Root_ProductionController_PossibleProductionMachinesChanged;
			for (int i = 0; i < _datasource_Root_ProductionController_PossibleProductionMachines.Count; i++)
			{
				MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate = new MapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate);
				MapSiegeProductionMachineVM dataSource = (MapSiegeProductionMachineVM)(generatedWidgetData.Data = _datasource_Root_ProductionController_PossibleProductionMachines[i]);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_2_0.AddChildAtIndex(mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate, i);
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.CreateWidgets();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetIds();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetAttributes();
				mapSiegeOverlay__SandBox_ViewModelCollection_MapSiege_MapSiegeVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
