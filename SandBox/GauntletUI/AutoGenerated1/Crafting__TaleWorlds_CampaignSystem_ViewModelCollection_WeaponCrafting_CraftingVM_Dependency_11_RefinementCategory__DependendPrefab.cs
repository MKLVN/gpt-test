using System.ComponentModel;
using System.Numerics;
using TaleWorlds.CampaignSystem.ViewModelCollection.WeaponCrafting.Refinement;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;

namespace SandBox.GauntletUI.AutoGenerated1;

public class Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_11_RefinementCategory__DependendPrefab : Widget
{
	private Widget _widget;

	private Widget _widget_0;

	private Widget _widget_0_0;

	private TextWidget _widget_0_0_0;

	private ListPanel _widget_0_1;

	private ScrollablePanel _widget_0_1_0;

	private NavigationScopeTargeter _widget_0_1_0_0;

	private Widget _widget_0_1_0_1;

	private NavigatableListPanel _widget_0_1_0_1_0;

	private Widget _widget_0_1_0_1_1;

	private ScrollbarWidget _widget_0_2;

	private Widget _widget_0_2_0;

	private ImageWidget _widget_0_2_1;

	private RefinementVM _datasource_Root;

	private MBBindingList<RefinementActionItemVM> _datasource_Root_AvailableRefinementActions;

	public Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_11_RefinementCategory__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new TextWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_1 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_1_0 = new ScrollablePanel(base.Context);
		_widget_0_1.AddChild(_widget_0_1_0);
		_widget_0_1_0_0 = new NavigationScopeTargeter(base.Context);
		_widget_0_1_0.AddChild(_widget_0_1_0_0);
		_widget_0_1_0_1 = new Widget(base.Context);
		_widget_0_1_0.AddChild(_widget_0_1_0_1);
		_widget_0_1_0_1_0 = new NavigatableListPanel(base.Context);
		_widget_0_1_0_1.AddChild(_widget_0_1_0_1_0);
		_widget_0_1_0_1_1 = new Widget(base.Context);
		_widget_0_1_0_1.AddChild(_widget_0_1_0_1_1);
		_widget_0_2 = new ScrollbarWidget(base.Context);
		_widget_0.AddChild(_widget_0_2);
		_widget_0_2_0 = new Widget(base.Context);
		_widget_0_2.AddChild(_widget_0_2_0);
		_widget_0_2_1 = new ImageWidget(base.Context);
		_widget_0_2.AddChild(_widget_0_2_1);
	}

	public void SetIds()
	{
		base.Id = "RefinementCategoryParent";
		_widget_0.Id = "InnerPanel";
		_widget_0_1_0_1.Id = "ClipRect";
		_widget_0_1_0_1_0.Id = "RefinementActionsList";
		_widget_0_2.Id = "VerticalScrollbar";
		_widget_0_2_1.Id = "VerticalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.DoNotAcceptEvents = true;
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 585f;
		_widget_0.SuggestedHeight = 770f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0.MarginTop = 10f;
		_widget_0.PositionXOffset = 16f;
		_widget_0.PositionYOffset = 24f;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedWidth = 575f;
		_widget_0_0.SuggestedHeight = 51f;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_0.Sprite = base.Context.SpriteData.GetSprite("Crafting\\refine_panel_header");
		_widget_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.Brush = base.Context.GetBrush("Refinement.Tuple.Text");
		_widget_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_1.MarginLeft = 6f;
		_widget_0_1.MarginTop = 48f;
		_widget_0_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1_0.HorizontalAlignment = HorizontalAlignment.Left;
		_widget_0_1_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_1_0.AutoHideScrollBars = true;
		_widget_0_1_0.ClipRect = _widget_0_1_0_1;
		_widget_0_1_0.InnerPanel = _widget_0_1_0_1_0;
		_widget_0_1_0.VerticalScrollbar = _widget_0_2;
		_widget_0_1_0_0.ScopeID = "RefinementScope";
		_widget_0_1_0_0.ScopeParent = _widget_0_1_0_1;
		_widget_0_1_0_0.ScopeMovements = GamepadNavigationTypes.Vertical;
		_widget_0_1_0_0.HasCircularMovement = true;
		_widget_0_1_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1_0_1.ClipContents = true;
		_widget_0_1_0_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_1_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_1_0_1_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_1_0_1_0.MarginBottom = 40f;
		_widget_0_1_0_1_1.DoNotAcceptEvents = true;
		_widget_0_1_0_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_1_0_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_1_0_1_1.SuggestedWidth = 576f;
		_widget_0_1_0_1_1.SuggestedHeight = 57f;
		_widget_0_1_0_1_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_1_0_1_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_1_0_1_1.IsEnabled = false;
		_widget_0_1_0_1_1.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\character_creation_scroll_gradient");
		_widget_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_2.SuggestedWidth = 8f;
		_widget_0_2.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_2.MarginTop = 7f;
		_widget_0_2.MarginBottom = 7f;
		_widget_0_2.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_0_2.Handle = _widget_0_2_1;
		_widget_0_2.MaxValue = 100f;
		_widget_0_2.MinValue = 0f;
		_widget_0_2_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_2_0.SuggestedWidth = 4f;
		_widget_0_2_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_2_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_0_2_0.AlphaFactor = 0.2f;
		_widget_0_2_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_0_2_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2_1.SuggestedWidth = 8f;
		_widget_0_2_1.SuggestedHeight = 10f;
		_widget_0_2_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_2_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0;
		if (_datasource_Root_AvailableRefinementActions != null)
		{
			_datasource_Root_AvailableRefinementActions.ListChanged -= OnList_datasource_Root_AvailableRefinementActionsChanged;
			for (int num = _widget_0_1_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_1_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child).OnBeforeRemovedChild(child);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)_widget_0_1_0_1_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_AvailableRefinementActions = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(RefinementVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.RefinementText = _widget_0_0_0.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "AvailableRefinementActions")
		{
			RefreshDataSource_datasource_Root_AvailableRefinementActions(_datasource_Root.AvailableRefinementActions);
		}
		else if (propertyName == "RefinementText")
		{
			_widget_0_0_0.Text = _datasource_Root.RefinementText;
		}
	}

	public void OnList_datasource_Root_AvailableRefinementActionsChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_1_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_1_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_1_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child4).SetDataSource(null);
				_widget_0_1_0_1_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_AvailableRefinementActions.Count; i++)
			{
				RefinementActionItemVM bindingObject = _datasource_Root_AvailableRefinementActions[i];
				_widget_0_1_0_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate);
			RefinementActionItemVM dataSource = (RefinementActionItemVM)(generatedWidgetData.Data = _datasource_Root_AvailableRefinementActions[e.NewIndex]);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_1_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate, e.NewIndex);
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.CreateWidgets();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetIds();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetAttributes();
			crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_1_0_1_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_1_0_1_0.GetChild(e.NewIndex);
			((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child).SetDataSource(null);
			_widget_0_1_0_1_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(RefinementVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0;
			if (_datasource_Root_AvailableRefinementActions != null)
			{
				_datasource_Root_AvailableRefinementActions.ListChanged -= OnList_datasource_Root_AvailableRefinementActionsChanged;
				for (int num = _widget_0_1_0_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_1_0_1_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_1_0_1_0.GetChild(num);
					((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child2).SetDataSource(null);
					_widget_0_1_0_1_0.RemoveChild(child2);
				}
				_datasource_Root_AvailableRefinementActions = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0_0_0.Text = _datasource_Root.RefinementText;
		_widget_0_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0;
		_widget_0_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0;
		_datasource_Root_AvailableRefinementActions = _datasource_Root.AvailableRefinementActions;
		if (_datasource_Root_AvailableRefinementActions != null)
		{
			_datasource_Root_AvailableRefinementActions.ListChanged += OnList_datasource_Root_AvailableRefinementActionsChanged;
			for (int i = 0; i < _datasource_Root_AvailableRefinementActions.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate);
				RefinementActionItemVM dataSource = (RefinementActionItemVM)(generatedWidgetData.Data = _datasource_Root_AvailableRefinementActions[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_1_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_AvailableRefinementActions(MBBindingList<RefinementActionItemVM> newDataSource)
	{
		if (_datasource_Root_AvailableRefinementActions != null)
		{
			_datasource_Root_AvailableRefinementActions.ListChanged -= OnList_datasource_Root_AvailableRefinementActionsChanged;
			for (int num = _widget_0_1_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_1_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_1_0_1_0.GetChild(num);
				((Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate)child2).SetDataSource(null);
				_widget_0_1_0_1_0.RemoveChild(child2);
			}
			_datasource_Root_AvailableRefinementActions = null;
		}
		_datasource_Root_AvailableRefinementActions = newDataSource;
		_datasource_Root_AvailableRefinementActions = _datasource_Root.AvailableRefinementActions;
		if (_datasource_Root_AvailableRefinementActions != null)
		{
			_datasource_Root_AvailableRefinementActions.ListChanged += OnList_datasource_Root_AvailableRefinementActionsChanged;
			for (int i = 0; i < _datasource_Root_AvailableRefinementActions.Count; i++)
			{
				Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate = new Crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate);
				RefinementActionItemVM dataSource = (RefinementActionItemVM)(generatedWidgetData.Data = _datasource_Root_AvailableRefinementActions[i]);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_1_0_1_0.AddChildAtIndex(crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate, i);
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.CreateWidgets();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetIds();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetAttributes();
				crafting__TaleWorlds_CampaignSystem_ViewModelCollection_WeaponCrafting_CraftingVM_Dependency_26_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
