using System.ComponentModel;
using System.Numerics;
using SandBox.ViewModelCollection.SaveLoad;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Party;

namespace SandBox.GauntletUI.AutoGenerated1;

public class SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_4_SavedGameGroup__InheritedPrefab : NavigatableListPanel
{
	private NavigatableListPanel _widget;

	private PartyHeaderToggleWidget _widget_0;

	private ListPanel _widget_0_0;

	private BrushWidget _widget_0_0_0;

	private TextWidget _widget_0_0_1;

	private NavigatableListPanel _widget_1;

	private SavedGameGroupVM _datasource_Root;

	private MBBindingList<SavedGameVM> _datasource_Root_SavedGamesList;

	public SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_4_SavedGameGroup__InheritedPrefab(UIContext context)
		: base(context)
	{
	}

	public virtual void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new PartyHeaderToggleWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new BrushWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new TextWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_1 = new NavigatableListPanel(base.Context);
		_widget.AddChild(_widget_1);
	}

	public virtual void SetIds()
	{
		_widget_0.Id = "HeaderToggle";
		_widget_0_0.Id = "Description";
		_widget_0_0_0.Id = "CollapseIndicator";
		_widget_1.Id = "SaveList";
	}

	public virtual void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.SuggestedWidth = 569f;
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		base.UseSelfIndexForMinimum = true;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 626f;
		_widget_0.SuggestedHeight = 72f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0.Brush = base.Context.GetBrush("SaveLoad.Collapser");
		_widget_0.CollapseIndicator = _widget_0_0_0;
		_widget_0.ListPanel = _widget_1;
		_widget_0.RenderLate = true;
		_widget_0.WidgetToClose = _widget_1;
		_widget_0.IsRelevant = true;
		_widget_0.ExtendCursorAreaLeft = -25f;
		_widget_0.ExtendCursorAreaRight = -25f;
		_widget_0.ExtendCursorAreaTop = 3f;
		_widget_0.ExtendCursorAreaBottom = 3f;
		_widget_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0.IsDisabled = true;
		_widget_0_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.SuggestedWidth = 40f;
		_widget_0_0_0.SuggestedHeight = 40f;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0.PositionYOffset = 5f;
		_widget_0_0_0.MarginRight = 5f;
		_widget_0_0_0.Brush = base.Context.GetBrush("Party.Toggle.ExpandIndicator");
		_widget_0_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_1.MarginRight = 5f;
		_widget_0_0_1.Brush = base.Context.GetBrush("Party.Text.Toggle");
		_widget_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_1.UseSelfIndexForMinimum = true;
	}

	public virtual void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
		_widget_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_1;
		if (_datasource_Root_SavedGamesList != null)
		{
			_datasource_Root_SavedGamesList.ListChanged -= OnList_datasource_Root_SavedGamesListChanged;
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1.GetChild(num);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)_widget_1.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_SavedGamesList = null;
		}
		_datasource_Root = null;
	}

	public virtual void SetDataSource(SavedGameGroupVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		if (propertyName == "IsHidden")
		{
			_datasource_Root.IsFilteredOut = _widget.IsHidden;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.IdentifierID = _widget_0_0_1.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "SavedGamesList":
			RefreshDataSource_datasource_Root_SavedGamesList(_datasource_Root.SavedGamesList);
			break;
		case "IsFilteredOut":
			_widget.IsHidden = _datasource_Root.IsFilteredOut;
			break;
		case "IdentifierID":
			_widget_0_0_1.Text = _datasource_Root.IdentifierID;
			break;
		}
	}

	public void OnList_datasource_Root_SavedGamesListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1.GetChild(num);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1.GetChild(num);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child4).SetDataSource(null);
				_widget_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_SavedGamesList.Count; i++)
			{
				SavedGameVM bindingObject = _datasource_Root_SavedGamesList[i];
				_widget_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate = new SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate);
			SavedGameVM dataSource = (SavedGameVM)(generatedWidgetData.Data = _datasource_Root_SavedGamesList[e.NewIndex]);
			saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1.AddChildAtIndex(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate, e.NewIndex);
			saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.CreateWidgets();
			saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetIds();
			saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetAttributes();
			saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1.GetChild(e.NewIndex);
			((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1.GetChild(e.NewIndex);
			((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child).SetDataSource(null);
			_widget_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(SavedGameGroupVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_1;
			if (_datasource_Root_SavedGamesList != null)
			{
				_datasource_Root_SavedGamesList.ListChanged -= OnList_datasource_Root_SavedGamesListChanged;
				for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1.GetChild(num);
					((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1.GetChild(num);
					((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
					_widget_1.RemoveChild(child2);
				}
				_datasource_Root_SavedGamesList = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.IsHidden = _datasource_Root.IsFilteredOut;
		_widget.PropertyChanged += PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
		_widget_0_0_1.Text = _datasource_Root.IdentifierID;
		_widget_0_0_1.PropertyChanged += PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_1;
		_widget_0_0_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_1;
		_datasource_Root_SavedGamesList = _datasource_Root.SavedGamesList;
		if (_datasource_Root_SavedGamesList != null)
		{
			_datasource_Root_SavedGamesList.ListChanged += OnList_datasource_Root_SavedGamesListChanged;
			for (int i = 0; i < _datasource_Root_SavedGamesList.Count; i++)
			{
				SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate = new SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate);
				SavedGameVM dataSource = (SavedGameVM)(generatedWidgetData.Data = _datasource_Root_SavedGamesList[i]);
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate, i);
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.CreateWidgets();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetIds();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetAttributes();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_SavedGamesList(MBBindingList<SavedGameVM> newDataSource)
	{
		if (_datasource_Root_SavedGamesList != null)
		{
			_datasource_Root_SavedGamesList.ListChanged -= OnList_datasource_Root_SavedGamesListChanged;
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1.GetChild(num);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1.GetChild(num);
				((SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
				_widget_1.RemoveChild(child2);
			}
			_datasource_Root_SavedGamesList = null;
		}
		_datasource_Root_SavedGamesList = newDataSource;
		_datasource_Root_SavedGamesList = _datasource_Root.SavedGamesList;
		if (_datasource_Root_SavedGamesList != null)
		{
			_datasource_Root_SavedGamesList.ListChanged += OnList_datasource_Root_SavedGamesListChanged;
			for (int i = 0; i < _datasource_Root_SavedGamesList.Count; i++)
			{
				SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate = new SaveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate);
				SavedGameVM dataSource = (SavedGameVM)(generatedWidgetData.Data = _datasource_Root_SavedGamesList[i]);
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate, i);
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.CreateWidgets();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetIds();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetAttributes();
				saveLoadScreen__SandBox_ViewModelCollection_SaveLoad_SaveLoadVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
