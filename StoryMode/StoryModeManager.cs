using System.Collections.Generic;
using StoryMode.StoryModeObjects;
using TaleWorlds.Core;
using TaleWorlds.SaveSystem;

namespace StoryMode;

public class StoryModeManager
{
	public static StoryModeManager Current => (Game.Current?.GameType as CampaignStoryMode)?.StoryMode;

	public StoryModeEvents StoryModeEvents { get; private set; }

	[SaveableProperty(1)]
	public MainStoryLine MainStoryLine { get; private set; }

	public StoryModeHeroes StoryModeHeroes { get; private set; }

	public StoryModeBannerEffects StoryModeBannerEffects { get; private set; }

	internal static void AutoGeneratedStaticCollectObjectsStoryModeManager(object o, List<object> collectedObjects)
	{
		((StoryModeManager)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		collectedObjects.Add(MainStoryLine);
	}

	internal static object AutoGeneratedGetMemberValueMainStoryLine(object o)
	{
		return ((StoryModeManager)o).MainStoryLine;
	}

	public StoryModeManager()
	{
		Initialize();
		MainStoryLine = new MainStoryLine();
	}

	[LoadInitializationCallback]
	private void OnLoad(MetaData metaData)
	{
		Initialize();
	}

	private void Initialize()
	{
		StoryModeEvents = new StoryModeEvents();
	}

	internal void Destroy()
	{
		StoryModeData.OnGameEnd();
	}

	internal void TickRealTime(float dt)
	{
	}

	internal void InitializeStoryModeObjects()
	{
		StoryModeHeroes = new StoryModeHeroes();
		StoryModeBannerEffects = new StoryModeBannerEffects();
	}
}
