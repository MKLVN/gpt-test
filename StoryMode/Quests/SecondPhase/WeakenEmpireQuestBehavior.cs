using System.Collections.Generic;
using System.Linq;
using StoryMode.StoryModeObjects;
using StoryMode.StoryModePhases;
using TaleWorlds.CampaignSystem;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace StoryMode.Quests.SecondPhase;

public class WeakenEmpireQuestBehavior : CampaignBehaviorBase
{
	public class WeakenEmpireQuestBehaviorTypeDefiner : SaveableTypeDefiner
	{
		public WeakenEmpireQuestBehaviorTypeDefiner()
			: base(1005000)
		{
		}

		protected override void DefineClassTypes()
		{
			AddClassDefinition(typeof(WeakenEmpireQuest), 1);
		}
	}

	public class WeakenEmpireQuest : StoryModeQuestBase
	{
		private const int EmpireDefeatSettlementCount = 4;

		private bool _weakenedEmpire;

		private TextObject _startQuestLog
		{
			get
			{
				TextObject textObject = new TextObject("{=0wQlpbtL}In order for the Empire to go into its final decline, there should be fewer than {NUMBER} imperial-owned settlements. If this happens, another kingdom can become the dominant power in Calradia.");
				textObject.SetTextVariable("NUMBER", 4);
				return textObject;
			}
		}

		public override TextObject Title => new TextObject("{=iR4QCTxv}Weaken Empire");

		private TextObject _questCanceledLogText => new TextObject("{=tVlZTOst}You have chosen a different path.");

		public WeakenEmpireQuest(Hero questGiver)
			: base("weaken_empire_quest", questGiver, CampaignTime.Never)
		{
			_weakenedEmpire = false;
			SetDialogs();
			InitializeQuestOnCreation();
			AddLog(_startQuestLog);
		}

		protected override void SetDialogs()
		{
			DiscussDialogFlow = DialogFlow.CreateDialogFlow("quest_discuss").NpcLine(new TextObject("{=VeY3PQFL}You chose to defeat the Empire.")).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
				.CloseDialog();
		}

		protected override void InitializeQuestOnGameLoad()
		{
			SetDialogs();
		}

		protected override void RegisterEvents()
		{
			StoryModeEvents.OnConspiracyActivatedEvent.AddNonSerializedListener(this, OnConspiracyActivated);
			CampaignEvents.ClanChangedKingdom.AddNonSerializedListener(this, OnClanChangedKingdom);
		}

		private void OnClanChangedKingdom(Clan clan, Kingdom oldKingdom, Kingdom newKingdom, ChangeKingdomAction.ChangeKingdomActionDetail detail, bool showNotification = true)
		{
			if (clan == Clan.PlayerClan && oldKingdom == StoryModeManager.Current.MainStoryLine.PlayerSupportedKingdom)
			{
				CompleteQuestWithCancel(_questCanceledLogText);
				StoryModeManager.Current.MainStoryLine.CancelSecondAndThirdPhase();
			}
		}

		protected override void HourlyTick()
		{
			if (QuestConditionsHold())
			{
				SuccessComplete();
			}
		}

		private void OnConspiracyActivated()
		{
			if (!_weakenedEmpire)
			{
				CompleteQuestWithFail(new TextObject("{=JVkPkbdg}You could not weaken the Empire."));
			}
		}

		private bool QuestConditionsHold()
		{
			return StoryModeData.NorthernEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) + StoryModeData.WesternEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) + StoryModeData.SouthernEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) < 4;
		}

		private void SuccessComplete()
		{
			AddLog(new TextObject("{=wO19nK2y}You have weakened the Empire."));
			CompleteQuestWithSuccess();
			_weakenedEmpire = true;
			StoryMode.StoryModePhases.SecondPhase.Instance.ActivateConspiracy();
		}

		internal static void AutoGeneratedStaticCollectObjectsWeakenEmpireQuest(object o, List<object> collectedObjects)
		{
			((WeakenEmpireQuest)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}
	}

	public override void RegisterEvents()
	{
		StoryModeEvents.OnMainStoryLineSideChosenEvent.AddNonSerializedListener(this, OnMainStoryLineSideChosen);
	}

	public override void SyncData(IDataStore dataStore)
	{
	}

	private void OnMainStoryLineSideChosen(MainStoryLineSide side)
	{
		if (side == MainStoryLineSide.CreateAntiImperialKingdom || side == MainStoryLineSide.SupportAntiImperialKingdom)
		{
			new WeakenEmpireQuest(StoryModeHeroes.AntiImperialMentor).StartQuest();
		}
	}
}
